Grading at Sun Mar  7 22:01:55 UTC 2021
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
- Test passed
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Testing with 2 hands
Testing with 3 hands
Testing with 4 hands
Testing with 5 hands
Testing with 6 hands
- Test passed
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==8253== Memcheck, a memory error detector
==8253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8253== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==8253== Command: ./tester gmc
==8253== Parent PID: 8252
==8253== 
==8253== Invalid write of size 4
==8253==    at 0x401416: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==8253==    by 0x402DF9: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==8253==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==8253==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8253== 
==8253== 
==8253== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==8253==  Access not within mapped region at address 0x0
==8253==    at 0x401416: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==8253==    by 0x402DF9: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==8253==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==8253==  If you believe this happened as a result of a stack
==8253==  overflow in your program's main thread (unlikely but
==8253==  possible), you can try to increase the size of the
==8253==  main thread stack using the --main-stacksize= flag.
==8253==  The main thread stack size used in this run was 8388608.
==8253== 
==8253== HEAP SUMMARY:
==8253==     in use at exit: 68 bytes in 7 blocks
==8253==   total heap usage: 7 allocs, 0 frees, 68 bytes allocated
==8253== 
==8253== LEAK SUMMARY:
==8253==    definitely lost: 4 bytes in 1 blocks
==8253==    indirectly lost: 0 bytes in 0 blocks
==8253==      possibly lost: 0 bytes in 0 blocks
==8253==    still reachable: 64 bytes in 6 blocks
==8253==         suppressed: 0 bytes in 0 blocks
==8253== Rerun with --leak-check=full to see details of leaked memory
==8253== 
==8253== For counts of detected and suppressed errors, rerun with: -v
==8253== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: B
