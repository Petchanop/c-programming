Grading at Sun Jan 24 20:15:26 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1964== Memcheck, a memory error detector
==1964== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1964== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1964== Command: ./test-eval inp.1.txt
==1964== Parent PID: 1963
==1964== 
==1964== Use of uninitialised value of size 8
==1964==    at 0x400C02: print_hand (deck.c:8)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964== 
==1964== Conditional jump or move depends on uninitialised value(s)
==1964==    at 0x402B72: suit_letter (cards.c:50)
==1964==    by 0x402BC0: print_card (cards.c:61)
==1964==    by 0x400C14: print_hand (deck.c:9)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964== 
==1964== Conditional jump or move depends on uninitialised value(s)
==1964==    at 0x402B77: suit_letter (cards.c:50)
==1964==    by 0x402BC0: print_card (cards.c:61)
==1964==    by 0x400C14: print_hand (deck.c:9)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964== 
==1964== Conditional jump or move depends on uninitialised value(s)
==1964==    at 0x402AF4: value_letter (cards.c:28)
==1964==    by 0x402BCF: print_card (cards.c:61)
==1964==    by 0x400C14: print_hand (deck.c:9)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964== 
==1964== Invalid read of size 8
==1964==    at 0x400C02: print_hand (deck.c:8)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1964== 
==1964== 
==1964== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1964==  Access not within mapped region at address 0x400001102
==1964==    at 0x400C02: print_hand (deck.c:8)
==1964==    by 0x4026F9: describe_hand (test-eval.c:74)
==1964==    by 0x4028D9: main (test-eval.c:116)
==1964==  If you believe this happened as a result of a stack
==1964==  overflow in your program's main thread (unlikely but
==1964==  possible), you can try to increase the size of the
==1964==  main thread stack using the --main-stacksize= flag.
==1964==  The main thread stack size used in this run was 8388608.
==1964== 
==1964== HEAP SUMMARY:
==1964==     in use at exit: 896 bytes in 18 blocks
==1964==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1964== 
==1964== LEAK SUMMARY:
==1964==    definitely lost: 0 bytes in 0 blocks
==1964==    indirectly lost: 0 bytes in 0 blocks
==1964==      possibly lost: 0 bytes in 0 blocks
==1964==    still reachable: 896 bytes in 18 blocks
==1964==         suppressed: 0 bytes in 0 blocks
==1964== Rerun with --leak-check=full to see details of leaked memory
==1964== 
==1964== For counts of detected and suppressed errors, rerun with: -v
==1964== Use --track-origins=yes to see where uninitialised values come from
==1964== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kh 9d 8c 3h 						Ac As Kh 9d 8c 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Kh 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Ks Js 9h 2c 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kc Ks Js 9h 2c 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Qd 9d 8c 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Qd 9d 8c 		      <
Hand 2:							      <
--------						      <
Ad Ah Qh Js 9c 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ad Ah Qh Js 9c 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh 7d 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kd Kh As 7d 3s 		      <
Hand 2:							      <
--------						      <
As Kh Qc Qd 9d 5c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Qc Qd As Kh 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 9h 7c 5c 5d 4s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 3 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5c 5d Js 9h 7c 		      <
Hand 2:							      <
--------						      <
Jd 9h 7c 6h 5h 5s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 4 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5h 5s Jd 9h 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Kd Ks 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Kd Ks 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Jd Js 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Jd Js 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 7d 7s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 8d 8s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 8)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 9d 4c 4s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 4)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 4c 4s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Qc Qs 9d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Qc Qs 5c 5s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Jc Jd Jh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 8c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 4h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 5h 3c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Qc Qd Qh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 5: Trying hands with straights
Valgrind returned an error status
==2008== Memcheck, a memory error detector
==2008== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2008== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2008== Command: ./test-eval inp.5.txt
==2008== Parent PID: 2007
==2008== 
==2008== Use of uninitialised value of size 8
==2008==    at 0x400C02: print_hand (deck.c:8)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008== 
==2008== Conditional jump or move depends on uninitialised value(s)
==2008==    at 0x402B72: suit_letter (cards.c:50)
==2008==    by 0x402BC0: print_card (cards.c:61)
==2008==    by 0x400C14: print_hand (deck.c:9)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008== 
==2008== Conditional jump or move depends on uninitialised value(s)
==2008==    at 0x402B77: suit_letter (cards.c:50)
==2008==    by 0x402BC0: print_card (cards.c:61)
==2008==    by 0x400C14: print_hand (deck.c:9)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008== 
==2008== Conditional jump or move depends on uninitialised value(s)
==2008==    at 0x402AF4: value_letter (cards.c:28)
==2008==    by 0x402BCF: print_card (cards.c:61)
==2008==    by 0x400C14: print_hand (deck.c:9)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008== 
==2008== Invalid read of size 8
==2008==    at 0x400C02: print_hand (deck.c:8)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==2008== 
==2008== 
==2008== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2008==  Access not within mapped region at address 0x400001102
==2008==    at 0x400C02: print_hand (deck.c:8)
==2008==    by 0x4026F9: describe_hand (test-eval.c:74)
==2008==    by 0x4028D9: main (test-eval.c:116)
==2008==  If you believe this happened as a result of a stack
==2008==  overflow in your program's main thread (unlikely but
==2008==  possible), you can try to increase the size of the
==2008==  main thread stack using the --main-stacksize= flag.
==2008==  The main thread stack size used in this run was 8388608.
==2008== 
==2008== HEAP SUMMARY:
==2008==     in use at exit: 864 bytes in 16 blocks
==2008==   total heap usage: 78 allocs, 62 frees, 10,080 bytes allocated
==2008== 
==2008== LEAK SUMMARY:
==2008==    definitely lost: 0 bytes in 0 blocks
==2008==    indirectly lost: 0 bytes in 0 blocks
==2008==      possibly lost: 0 bytes in 0 blocks
==2008==    still reachable: 864 bytes in 16 blocks
==2008==         suppressed: 0 bytes in 0 blocks
==2008== Rerun with --leak-check=full to see details of leaked memory
==2008== 
==2008== For counts of detected and suppressed errors, rerun with: -v
==2008== Use --track-origins=yes to see where uninitialised values come from
==2008== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==2013== Memcheck, a memory error detector
==2013== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2013== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2013== Command: ./test-eval inp.6.txt
==2013== Parent PID: 2012
==2013== 
==2013== Use of uninitialised value of size 8
==2013==    at 0x400C02: print_hand (deck.c:8)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013== 
==2013== Conditional jump or move depends on uninitialised value(s)
==2013==    at 0x402B72: suit_letter (cards.c:50)
==2013==    by 0x402BC0: print_card (cards.c:61)
==2013==    by 0x400C14: print_hand (deck.c:9)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013== 
==2013== Conditional jump or move depends on uninitialised value(s)
==2013==    at 0x402B77: suit_letter (cards.c:50)
==2013==    by 0x402BC0: print_card (cards.c:61)
==2013==    by 0x400C14: print_hand (deck.c:9)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013== 
==2013== Conditional jump or move depends on uninitialised value(s)
==2013==    at 0x402AF4: value_letter (cards.c:28)
==2013==    by 0x402BCF: print_card (cards.c:61)
==2013==    by 0x400C14: print_hand (deck.c:9)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013== 
==2013== Invalid read of size 8
==2013==    at 0x400C02: print_hand (deck.c:8)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==2013== 
==2013== 
==2013== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2013==  Access not within mapped region at address 0x400001102
==2013==    at 0x400C02: print_hand (deck.c:8)
==2013==    by 0x4026F9: describe_hand (test-eval.c:74)
==2013==    by 0x4028D9: main (test-eval.c:116)
==2013==  If you believe this happened as a result of a stack
==2013==  overflow in your program's main thread (unlikely but
==2013==  possible), you can try to increase the size of the
==2013==  main thread stack using the --main-stacksize= flag.
==2013==  The main thread stack size used in this run was 8388608.
==2013== 
==2013== HEAP SUMMARY:
==2013==     in use at exit: 896 bytes in 18 blocks
==2013==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==2013== 
==2013== LEAK SUMMARY:
==2013==    definitely lost: 0 bytes in 0 blocks
==2013==    indirectly lost: 0 bytes in 0 blocks
==2013==      possibly lost: 0 bytes in 0 blocks
==2013==    still reachable: 896 bytes in 18 blocks
==2013==         suppressed: 0 bytes in 0 blocks
==2013== Rerun with --leak-check=full to see details of leaked memory
==2013== 
==2013== For counts of detected and suppressed errors, rerun with: -v
==2013== Use --track-origins=yes to see where uninitialised values come from
==2013== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kd Kh Ks 8d 7c 7h 2c 						Kd Kh Ks 8d 7c 7h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - Secondary pair at index 4 (value 7)				 - Secondary pair at index 4 (value 7)
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Kd Kh Ks 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 7s 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 8c 8d 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 8c 8d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 6c 6d 6h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 6)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 6c 6d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Kh Ks 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Kh Ks 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Qh Qs 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value Q)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Qh Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Jh Js 9d 7c 7h 7s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value J)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7h 7s Jh Js 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==2031== Memcheck, a memory error detector
==2031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2031== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2031== Command: ./test-eval inp.8.txt
==2031== Parent PID: 2030
==2031== 
==2031== Use of uninitialised value of size 8
==2031==    at 0x400C02: print_hand (deck.c:8)
==2031==    by 0x4026F9: describe_hand (test-eval.c:74)
==2031==    by 0x4028D9: main (test-eval.c:116)
==2031== 
==2031== Invalid read of size 8
==2031==    at 0x400C02: print_hand (deck.c:8)
==2031==    by 0x4026F9: describe_hand (test-eval.c:74)
==2031==    by 0x4028D9: main (test-eval.c:116)
==2031==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2031== 
==2031== 
==2031== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2031==  Access not within mapped region at address 0x0
==2031==    at 0x400C02: print_hand (deck.c:8)
==2031==    by 0x4026F9: describe_hand (test-eval.c:74)
==2031==    by 0x4028D9: main (test-eval.c:116)
==2031==  If you believe this happened as a result of a stack
==2031==  overflow in your program's main thread (unlikely but
==2031==  possible), you can try to increase the size of the
==2031==  main thread stack using the --main-stacksize= flag.
==2031==  The main thread stack size used in this run was 8388608.
==2031== 
==2031== HEAP SUMMARY:
==2031==     in use at exit: 896 bytes in 18 blocks
==2031==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==2031== 
==2031== LEAK SUMMARY:
==2031==    definitely lost: 0 bytes in 0 blocks
==2031==    indirectly lost: 0 bytes in 0 blocks
==2031==      possibly lost: 0 bytes in 0 blocks
==2031==    still reachable: 896 bytes in 18 blocks
==2031==         suppressed: 0 bytes in 0 blocks
==2031== Rerun with --leak-check=full to see details of leaked memory
==2031== 
==2031== For counts of detected and suppressed errors, rerun with: -v
==2031== Use --track-origins=yes to see where uninitialised values come from
==2031== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==2036== Memcheck, a memory error detector
==2036== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2036== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2036== Command: ./test-eval inp.9.txt
==2036== Parent PID: 2035
==2036== 
==2036== Use of uninitialised value of size 8
==2036==    at 0x400C02: print_hand (deck.c:8)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036== 
==2036== Conditional jump or move depends on uninitialised value(s)
==2036==    at 0x402B72: suit_letter (cards.c:50)
==2036==    by 0x402BC0: print_card (cards.c:61)
==2036==    by 0x400C14: print_hand (deck.c:9)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036== 
==2036== Conditional jump or move depends on uninitialised value(s)
==2036==    at 0x402B77: suit_letter (cards.c:50)
==2036==    by 0x402BC0: print_card (cards.c:61)
==2036==    by 0x400C14: print_hand (deck.c:9)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036== 
==2036== Conditional jump or move depends on uninitialised value(s)
==2036==    at 0x402AF4: value_letter (cards.c:28)
==2036==    by 0x402BCF: print_card (cards.c:61)
==2036==    by 0x400C14: print_hand (deck.c:9)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036== 
==2036== Invalid read of size 8
==2036==    at 0x400C02: print_hand (deck.c:8)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==2036== 
==2036== 
==2036== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2036==  Access not within mapped region at address 0x400001102
==2036==    at 0x400C02: print_hand (deck.c:8)
==2036==    by 0x4026F9: describe_hand (test-eval.c:74)
==2036==    by 0x4028D9: main (test-eval.c:116)
==2036==  If you believe this happened as a result of a stack
==2036==  overflow in your program's main thread (unlikely but
==2036==  possible), you can try to increase the size of the
==2036==  main thread stack using the --main-stacksize= flag.
==2036==  The main thread stack size used in this run was 8388608.
==2036== 
==2036== HEAP SUMMARY:
==2036==     in use at exit: 928 bytes in 20 blocks
==2036==   total heap usage: 86 allocs, 66 frees, 10,336 bytes allocated
==2036== 
==2036== LEAK SUMMARY:
==2036==    definitely lost: 0 bytes in 0 blocks
==2036==    indirectly lost: 0 bytes in 0 blocks
==2036==      possibly lost: 0 bytes in 0 blocks
==2036==    still reachable: 928 bytes in 20 blocks
==2036==         suppressed: 0 bytes in 0 blocks
==2036== Rerun with --leak-check=full to see details of leaked memory
==2036== 
==2036== For counts of detected and suppressed errors, rerun with: -v
==2036== Use --track-origins=yes to see where uninitialised values come from
==2036== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==2041== Memcheck, a memory error detector
==2041== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2041== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2041== Command: ./test-eval inp.10.txt
==2041== Parent PID: 2040
==2041== 
==2041== Use of uninitialised value of size 8
==2041==    at 0x400C02: print_hand (deck.c:8)
==2041==    by 0x4026F9: describe_hand (test-eval.c:74)
==2041==    by 0x4028F9: main (test-eval.c:119)
==2041== 
==2041== Invalid read of size 8
==2041==    at 0x400C02: print_hand (deck.c:8)
==2041==    by 0x4026F9: describe_hand (test-eval.c:74)
==2041==    by 0x4028F9: main (test-eval.c:119)
==2041==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2041== 
==2041== 
==2041== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2041==  Access not within mapped region at address 0x0
==2041==    at 0x400C02: print_hand (deck.c:8)
==2041==    by 0x4026F9: describe_hand (test-eval.c:74)
==2041==    by 0x4028F9: main (test-eval.c:119)
==2041==  If you believe this happened as a result of a stack
==2041==  overflow in your program's main thread (unlikely but
==2041==  possible), you can try to increase the size of the
==2041==  main thread stack using the --main-stacksize= flag.
==2041==  The main thread stack size used in this run was 8388608.
==2041== 
==2041== HEAP SUMMARY:
==2041==     in use at exit: 896 bytes in 18 blocks
==2041==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==2041== 
==2041== LEAK SUMMARY:
==2041==    definitely lost: 0 bytes in 0 blocks
==2041==    indirectly lost: 0 bytes in 0 blocks
==2041==      possibly lost: 0 bytes in 0 blocks
==2041==    still reachable: 896 bytes in 18 blocks
==2041==         suppressed: 0 bytes in 0 blocks
==2041== Rerun with --leak-check=full to see details of leaked memory
==2041== 
==2041== For counts of detected and suppressed errors, rerun with: -v
==2041== Use --track-origins=yes to see where uninitialised values come from
==2041== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
