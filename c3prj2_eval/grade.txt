Grading at Mon Jan 25 11:02:11 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1887== Memcheck, a memory error detector
==1887== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1887== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1887== Command: ./test-eval inp.1.txt
==1887== Parent PID: 1886
==1887== 
==1887== Invalid read of size 8
==1887==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1887==    by 0x4023B2: evaluate_hand (eval.c:341)
==1887==    by 0x40279A: describe_hand (test-eval.c:68)
==1887==    by 0x4029C5: main (test-eval.c:116)
==1887==  Address 0x520a308 is 0 bytes after a block of size 40 alloc'd
==1887==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1887==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1887==    by 0x4031A4: hand_from_string (input.c:49)
==1887==    by 0x40294A: main (test-eval.c:110)
==1887== 
==1887== Invalid read of size 8
==1887==    at 0x400C01: print_hand (deck.c:9)
==1887==    by 0x4027E5: describe_hand (test-eval.c:74)
==1887==    by 0x4029C5: main (test-eval.c:116)
==1887==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1887== 
==1887== 
==1887== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1887==  Access not within mapped region at address 0x0
==1887==    at 0x400C01: print_hand (deck.c:9)
==1887==    by 0x4027E5: describe_hand (test-eval.c:74)
==1887==    by 0x4029C5: main (test-eval.c:116)
==1887==  If you believe this happened as a result of a stack
==1887==  overflow in your program's main thread (unlikely but
==1887==  possible), you can try to increase the size of the
==1887==  main thread stack using the --main-stacksize= flag.
==1887==  The main thread stack size used in this run was 8388608.
==1887== 
==1887== HEAP SUMMARY:
==1887==     in use at exit: 864 bytes in 16 blocks
==1887==   total heap usage: 202 allocs, 186 frees, 12,472 bytes allocated
==1887== 
==1887== LEAK SUMMARY:
==1887==    definitely lost: 0 bytes in 0 blocks
==1887==    indirectly lost: 0 bytes in 0 blocks
==1887==      possibly lost: 0 bytes in 0 blocks
==1887==    still reachable: 864 bytes in 16 blocks
==1887==         suppressed: 0 bytes in 0 blocks
==1887== Rerun with --leak-check=full to see details of leaked memory
==1887== 
==1887== For counts of detected and suppressed errors, rerun with: -v
==1887== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==1892== Memcheck, a memory error detector
==1892== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1892== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1892== Command: ./test-eval inp.2.txt
==1892== Parent PID: 1891
==1892== 
==1892== Invalid read of size 8
==1892==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1892==    by 0x402390: evaluate_hand (eval.c:339)
==1892==    by 0x40279A: describe_hand (test-eval.c:68)
==1892==    by 0x4029E5: main (test-eval.c:119)
==1892==  Address 0x5205b38 is 0 bytes after a block of size 40 alloc'd
==1892==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1892==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1892==    by 0x4031A4: hand_from_string (input.c:49)
==1892==    by 0x40295F: main (test-eval.c:111)
==1892== 
==1892== Invalid read of size 8
==1892==    at 0x400C01: print_hand (deck.c:9)
==1892==    by 0x4027E5: describe_hand (test-eval.c:74)
==1892==    by 0x4029E5: main (test-eval.c:119)
==1892==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1892== 
==1892== 
==1892== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1892==  Access not within mapped region at address 0x0
==1892==    at 0x400C01: print_hand (deck.c:9)
==1892==    by 0x4027E5: describe_hand (test-eval.c:74)
==1892==    by 0x4029E5: main (test-eval.c:119)
==1892==  If you believe this happened as a result of a stack
==1892==  overflow in your program's main thread (unlikely but
==1892==  possible), you can try to increase the size of the
==1892==  main thread stack using the --main-stacksize= flag.
==1892==  The main thread stack size used in this run was 8388608.
==1892== 
==1892== HEAP SUMMARY:
==1892==     in use at exit: 880 bytes in 17 blocks
==1892==   total heap usage: 32 allocs, 15 frees, 9,360 bytes allocated
==1892== 
==1892== LEAK SUMMARY:
==1892==    definitely lost: 0 bytes in 0 blocks
==1892==    indirectly lost: 0 bytes in 0 blocks
==1892==      possibly lost: 0 bytes in 0 blocks
==1892==    still reachable: 880 bytes in 17 blocks
==1892==         suppressed: 0 bytes in 0 blocks
==1892== Rerun with --leak-check=full to see details of leaked memory
==1892== 
==1892== For counts of detected and suppressed errors, rerun with: -v
==1892== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==1897== Memcheck, a memory error detector
==1897== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1897== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1897== Command: ./test-eval inp.3.txt
==1897== Parent PID: 1896
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1897==    by 0x40227E: evaluate_hand (eval.c:323)
==1897==    by 0x40279A: describe_hand (test-eval.c:68)
==1897==    by 0x4029C5: main (test-eval.c:116)
==1897==  Address 0x52056c8 is 0 bytes after a block of size 40 alloc'd
==1897==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1897==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1897==    by 0x4031A4: hand_from_string (input.c:49)
==1897==    by 0x40294A: main (test-eval.c:110)
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1897==    by 0x40227E: evaluate_hand (eval.c:323)
==1897==    by 0x40279A: describe_hand (test-eval.c:68)
==1897==    by 0x4029E5: main (test-eval.c:119)
==1897==  Address 0x5205a78 is 0 bytes after a block of size 40 alloc'd
==1897==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1897==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1897==    by 0x4031A4: hand_from_string (input.c:49)
==1897==    by 0x40295F: main (test-eval.c:111)
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1897==    by 0x40227E: evaluate_hand (eval.c:323)
==1897==    by 0x401AC7: compare_hands (eval.c:176)
==1897==    by 0x402A3A: main (test-eval.c:124)
==1897==  Address 0x5206fe8 is 0 bytes after a block of size 40 alloc'd
==1897==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1897==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1897==    by 0x4031A4: hand_from_string (input.c:49)
==1897==    by 0x402A0E: main (test-eval.c:122)
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1897==    by 0x40227E: evaluate_hand (eval.c:323)
==1897==    by 0x401ADD: compare_hands (eval.c:177)
==1897==    by 0x402A3A: main (test-eval.c:124)
==1897==  Address 0x5207398 is 0 bytes after a block of size 40 alloc'd
==1897==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1897==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1897==    by 0x4031A4: hand_from_string (input.c:49)
==1897==    by 0x402A23: main (test-eval.c:123)
==1897== 
==1897== 
==1897== HEAP SUMMARY:
==1897==     in use at exit: 0 bytes in 0 blocks
==1897==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==1897== 
==1897== All heap blocks were freed -- no leaks are possible
==1897== 
==1897== For counts of detected and suppressed errors, rerun with: -v
==1897== ERROR SUMMARY: 28 errors from 4 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Line_8_did_not_match
Line_16_did_not_match
Line_28_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_48_did_not_match
Line_56_did_not_match
Line_68_did_not_match
Line_76_did_not_match
Line_79_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 2c 
Hand 2:								Hand 2:
--------							--------
Jc Jd Jh 7c 5h 2c 						Jc Jd Jh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value J)	 - The most of a kind is 3 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      |	 - 5 cards used for hand: Jc Jd Jh 5h 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 2c 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 8c 5h 2c 						Qc Qd Qh 8c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!						      |	Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 2c 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 7c 4h 2c 						Qc Qd Qh 7c 4h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      |	 - 5 cards used for hand: Qc Qd Qh 4h 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 2c 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 7c 5h 3c 						Qc Qd Qh 7c 5h 3c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh 5h 3c 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kc Qc Qd Qh 7c 						As Kc Qc Qd Qh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value Q)	 - The most of a kind is 3 of a kind (at index 2 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh As Kc 			 - 5 cards used for hand: Qc Qd Qh As Kc 
Hand 2:								Hand 2:
--------							--------
As Qc Jc Jd Jh 7c 						As Qc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Qc 			 - 5 cards used for hand: Jc Jd Jh As Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kc Jc Jd Jh 7c 						As Kc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Kc 			 - 5 cards used for hand: Jc Jd Jh As Kc 
Hand 2:								Hand 2:
--------							--------
As Qc Jc Jd Jh 7c 						As Qc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Qc 			 - 5 cards used for hand: Jc Jd Jh As Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Line_8_did_not_match
Line_16_did_not_match
Line_19_did_not_match
Line_28_did_not_match
Line_36_did_not_match
Line_48_did_not_match
Line_68_did_not_match
Line_88_did_not_match
Line_96_did_not_match
Line_108_did_not_match
Line_116_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 8c 6d 						Kc Kd Kh Ks 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 6d 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 9d 8c 						Kc Kd Kh Ks 9d 8c 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 9d 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 8c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
As Kc Kd Kh Ks 4d 						As Kc Kd Kh Ks 4d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 1 / value K)	 - The most of a kind is 4 of a kind (at index 1 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks As 			 - 5 cards used for hand: Kc Kd Kh Ks As 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
Ac As Kc Kd Kh Ks 						Ac As Kc Kd Kh Ks 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 2 / value K)	 - The most of a kind is 4 of a kind (at index 2 / value K)
 - Secondary pair at index 0 (value A)				 - Secondary pair at index 0 (value A)
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks Ac 			 - 5 cards used for hand: Kc Kd Kh Ks Ac 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 8c 6d 						Qc Qd Qh Qs 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 8c 		      |	 - 5 cards used for hand: Qc Qd Qh Qs 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks 7d 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 9c 6d 						Qc Qd Qh Qs 9c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 9c 		      |	 - 5 cards used for hand: Qc Qd Qh Qs 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 9: Trying hands with straight flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1976== Memcheck, a memory error detector
==1976== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1976== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1976== Command: ./test-eval inp.10.txt
==1976== Parent PID: 1975
==1976== 
==1976== Invalid read of size 8
==1976==    at 0x4019A7: build_hand_from_match (eval.c:162)
==1976==    by 0x402390: evaluate_hand (eval.c:339)
==1976==    by 0x40279A: describe_hand (test-eval.c:68)
==1976==    by 0x4029E5: main (test-eval.c:119)
==1976==  Address 0x520a918 is 0 bytes after a block of size 40 alloc'd
==1976==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1976==    by 0x400FCD: add_card_to (deck-c4.c:29)
==1976==    by 0x4031A4: hand_from_string (input.c:49)
==1976==    by 0x40295F: main (test-eval.c:111)
==1976== 
==1976== Invalid read of size 8
==1976==    at 0x400C01: print_hand (deck.c:9)
==1976==    by 0x4027E5: describe_hand (test-eval.c:74)
==1976==    by 0x4029E5: main (test-eval.c:119)
==1976==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1976== 
==1976== 
==1976== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1976==  Access not within mapped region at address 0x0
==1976==    at 0x400C01: print_hand (deck.c:9)
==1976==    by 0x4027E5: describe_hand (test-eval.c:74)
==1976==    by 0x4029E5: main (test-eval.c:119)
==1976==  If you believe this happened as a result of a stack
==1976==  overflow in your program's main thread (unlikely but
==1976==  possible), you can try to increase the size of the
==1976==  main thread stack using the --main-stacksize= flag.
==1976==  The main thread stack size used in this run was 8388608.
==1976== 
==1976== HEAP SUMMARY:
==1976==     in use at exit: 880 bytes in 17 blocks
==1976==   total heap usage: 210 allocs, 193 frees, 12,716 bytes allocated
==1976== 
==1976== LEAK SUMMARY:
==1976==    definitely lost: 0 bytes in 0 blocks
==1976==    indirectly lost: 0 bytes in 0 blocks
==1976==      possibly lost: 0 bytes in 0 blocks
==1976==    still reachable: 880 bytes in 17 blocks
==1976==         suppressed: 0 bytes in 0 blocks
==1976== Rerun with --leak-check=full to see details of leaked memory
==1976== 
==1976== For counts of detected and suppressed errors, rerun with: -v
==1976== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
