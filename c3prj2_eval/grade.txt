Grading at Sun Jan 24 19:06:46 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==810== Memcheck, a memory error detector
==810== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==810== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==810== Command: ./test-eval inp.1.txt
==810== Parent PID: 809
==810== 
==810== Use of uninitialised value of size 8
==810==    at 0x400C02: print_hand (deck.c:8)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810== 
==810== Conditional jump or move depends on uninitialised value(s)
==810==    at 0x402B68: suit_letter (cards.c:50)
==810==    by 0x402BB6: print_card (cards.c:61)
==810==    by 0x400C14: print_hand (deck.c:9)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810== 
==810== Conditional jump or move depends on uninitialised value(s)
==810==    at 0x402B6D: suit_letter (cards.c:50)
==810==    by 0x402BB6: print_card (cards.c:61)
==810==    by 0x400C14: print_hand (deck.c:9)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810== 
==810== Conditional jump or move depends on uninitialised value(s)
==810==    at 0x402AEA: value_letter (cards.c:28)
==810==    by 0x402BC5: print_card (cards.c:61)
==810==    by 0x400C14: print_hand (deck.c:9)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810== 
==810== Invalid read of size 8
==810==    at 0x400C02: print_hand (deck.c:8)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==810== 
==810== 
==810== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==810==  Access not within mapped region at address 0x400001102
==810==    at 0x400C02: print_hand (deck.c:8)
==810==    by 0x4026EF: describe_hand (test-eval.c:74)
==810==    by 0x4028CF: main (test-eval.c:116)
==810==  If you believe this happened as a result of a stack
==810==  overflow in your program's main thread (unlikely but
==810==  possible), you can try to increase the size of the
==810==  main thread stack using the --main-stacksize= flag.
==810==  The main thread stack size used in this run was 8388608.
==810== 
==810== HEAP SUMMARY:
==810==     in use at exit: 896 bytes in 18 blocks
==810==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==810== 
==810== LEAK SUMMARY:
==810==    definitely lost: 0 bytes in 0 blocks
==810==    indirectly lost: 0 bytes in 0 blocks
==810==      possibly lost: 0 bytes in 0 blocks
==810==    still reachable: 896 bytes in 18 blocks
==810==         suppressed: 0 bytes in 0 blocks
==810== Rerun with --leak-check=full to see details of leaked memory
==810== 
==810== For counts of detected and suppressed errors, rerun with: -v
==810== Use --track-origins=yes to see where uninitialised values come from
==810== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kh 9d 8c 3h 						Ac As Kh 9d 8c 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Kh 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Ks Js 9h 2c 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kc Ks Js 9h 2c 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Qd 9d 8c 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Qd 9d 8c 		      <
Hand 2:							      <
--------						      <
Ad Ah Qh Js 9c 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ad Ah Qh Js 9c 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh 7d 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kd Kh As 7d 3s 		      <
Hand 2:							      <
--------						      <
As Kh Qc Qd 9d 5c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Qc Qd As Kh 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 9h 7c 5c 5d 4s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 3 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5c 5d Js 9h 7c 		      <
Hand 2:							      <
--------						      <
Jd 9h 7c 6h 5h 5s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 4 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5h 5s Jd 9h 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Kd Ks 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Kd Ks 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Jd Js 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Jd Js 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 7d 7s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 8d 8s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 8)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 9d 4c 4s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 4)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 4c 4s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Qc Qs 9d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Qc Qs 5c 5s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Jc Jd Jh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 8c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 4h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 5h 3c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Qc Qd Qh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 5: Trying hands with straights
Valgrind returned an error status
==854== Memcheck, a memory error detector
==854== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==854== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==854== Command: ./test-eval inp.5.txt
==854== Parent PID: 853
==854== 
==854== Use of uninitialised value of size 8
==854==    at 0x400C02: print_hand (deck.c:8)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854== 
==854== Conditional jump or move depends on uninitialised value(s)
==854==    at 0x402B68: suit_letter (cards.c:50)
==854==    by 0x402BB6: print_card (cards.c:61)
==854==    by 0x400C14: print_hand (deck.c:9)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854== 
==854== Conditional jump or move depends on uninitialised value(s)
==854==    at 0x402B6D: suit_letter (cards.c:50)
==854==    by 0x402BB6: print_card (cards.c:61)
==854==    by 0x400C14: print_hand (deck.c:9)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854== 
==854== Conditional jump or move depends on uninitialised value(s)
==854==    at 0x402AEA: value_letter (cards.c:28)
==854==    by 0x402BC5: print_card (cards.c:61)
==854==    by 0x400C14: print_hand (deck.c:9)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854== 
==854== Invalid read of size 8
==854==    at 0x400C02: print_hand (deck.c:8)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==854== 
==854== 
==854== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==854==  Access not within mapped region at address 0x400001102
==854==    at 0x400C02: print_hand (deck.c:8)
==854==    by 0x4026EF: describe_hand (test-eval.c:74)
==854==    by 0x4028CF: main (test-eval.c:116)
==854==  If you believe this happened as a result of a stack
==854==  overflow in your program's main thread (unlikely but
==854==  possible), you can try to increase the size of the
==854==  main thread stack using the --main-stacksize= flag.
==854==  The main thread stack size used in this run was 8388608.
==854== 
==854== HEAP SUMMARY:
==854==     in use at exit: 864 bytes in 16 blocks
==854==   total heap usage: 78 allocs, 62 frees, 10,080 bytes allocated
==854== 
==854== LEAK SUMMARY:
==854==    definitely lost: 0 bytes in 0 blocks
==854==    indirectly lost: 0 bytes in 0 blocks
==854==      possibly lost: 0 bytes in 0 blocks
==854==    still reachable: 864 bytes in 16 blocks
==854==         suppressed: 0 bytes in 0 blocks
==854== Rerun with --leak-check=full to see details of leaked memory
==854== 
==854== For counts of detected and suppressed errors, rerun with: -v
==854== Use --track-origins=yes to see where uninitialised values come from
==854== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==859== Memcheck, a memory error detector
==859== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==859== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==859== Command: ./test-eval inp.6.txt
==859== Parent PID: 858
==859== 
==859== Use of uninitialised value of size 8
==859==    at 0x400C02: print_hand (deck.c:8)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859== 
==859== Conditional jump or move depends on uninitialised value(s)
==859==    at 0x402B68: suit_letter (cards.c:50)
==859==    by 0x402BB6: print_card (cards.c:61)
==859==    by 0x400C14: print_hand (deck.c:9)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859== 
==859== Conditional jump or move depends on uninitialised value(s)
==859==    at 0x402B6D: suit_letter (cards.c:50)
==859==    by 0x402BB6: print_card (cards.c:61)
==859==    by 0x400C14: print_hand (deck.c:9)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859== 
==859== Conditional jump or move depends on uninitialised value(s)
==859==    at 0x402AEA: value_letter (cards.c:28)
==859==    by 0x402BC5: print_card (cards.c:61)
==859==    by 0x400C14: print_hand (deck.c:9)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859== 
==859== Invalid read of size 8
==859==    at 0x400C02: print_hand (deck.c:8)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==859== 
==859== 
==859== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==859==  Access not within mapped region at address 0x400001102
==859==    at 0x400C02: print_hand (deck.c:8)
==859==    by 0x4026EF: describe_hand (test-eval.c:74)
==859==    by 0x4028CF: main (test-eval.c:116)
==859==  If you believe this happened as a result of a stack
==859==  overflow in your program's main thread (unlikely but
==859==  possible), you can try to increase the size of the
==859==  main thread stack using the --main-stacksize= flag.
==859==  The main thread stack size used in this run was 8388608.
==859== 
==859== HEAP SUMMARY:
==859==     in use at exit: 896 bytes in 18 blocks
==859==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==859== 
==859== LEAK SUMMARY:
==859==    definitely lost: 0 bytes in 0 blocks
==859==    indirectly lost: 0 bytes in 0 blocks
==859==      possibly lost: 0 bytes in 0 blocks
==859==    still reachable: 896 bytes in 18 blocks
==859==         suppressed: 0 bytes in 0 blocks
==859== Rerun with --leak-check=full to see details of leaked memory
==859== 
==859== For counts of detected and suppressed errors, rerun with: -v
==859== Use --track-origins=yes to see where uninitialised values come from
==859== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kd Kh Ks 8d 7c 7h 2c 						Kd Kh Ks 8d 7c 7h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - Secondary pair at index 4 (value 7)				 - Secondary pair at index 4 (value 7)
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Kd Kh Ks 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 7s 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 8c 8d 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 8c 8d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 6c 6d 6h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 6)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 6c 6d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Kh Ks 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Kh Ks 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Qh Qs 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value Q)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Qh Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Jh Js 9d 7c 7h 7s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value J)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7h 7s Jh Js 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==877== Memcheck, a memory error detector
==877== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==877== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==877== Command: ./test-eval inp.8.txt
==877== Parent PID: 876
==877== 
vex amd64->IR: unhandled instruction bytes: 0xF0 0x54 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==877== Invalid read of size 1
==877==    at 0x5205716: ???
==877==    by 0x4026A4: describe_hand (test-eval.c:68)
==877==    by 0x4028CF: main (test-eval.c:116)
==877==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==877== 
==877== 
==877== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==877==  Access not within mapped region at address 0xFF000AA1
==877==    at 0x5205716: ???
==877==    by 0x4026A4: describe_hand (test-eval.c:68)
==877==    by 0x4028CF: main (test-eval.c:116)
==877==  If you believe this happened as a result of a stack
==877==  overflow in your program's main thread (unlikely but
==877==  possible), you can try to increase the size of the
==877==  main thread stack using the --main-stacksize= flag.
==877==  The main thread stack size used in this run was 8388608.
==877== 
==877== HEAP SUMMARY:
==877==     in use at exit: 896 bytes in 18 blocks
==877==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==877== 
==877== LEAK SUMMARY:
==877==    definitely lost: 0 bytes in 0 blocks
==877==    indirectly lost: 0 bytes in 0 blocks
==877==      possibly lost: 0 bytes in 0 blocks
==877==    still reachable: 896 bytes in 18 blocks
==877==         suppressed: 0 bytes in 0 blocks
==877== Rerun with --leak-check=full to see details of leaked memory
==877== 
==877== For counts of detected and suppressed errors, rerun with: -v
==877== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==882== Memcheck, a memory error detector
==882== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==882== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==882== Command: ./test-eval inp.9.txt
==882== Parent PID: 881
==882== 
==882== Use of uninitialised value of size 8
==882==    at 0x400C02: print_hand (deck.c:8)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882== 
==882== Conditional jump or move depends on uninitialised value(s)
==882==    at 0x402B68: suit_letter (cards.c:50)
==882==    by 0x402BB6: print_card (cards.c:61)
==882==    by 0x400C14: print_hand (deck.c:9)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882== 
==882== Conditional jump or move depends on uninitialised value(s)
==882==    at 0x402B6D: suit_letter (cards.c:50)
==882==    by 0x402BB6: print_card (cards.c:61)
==882==    by 0x400C14: print_hand (deck.c:9)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882== 
==882== Conditional jump or move depends on uninitialised value(s)
==882==    at 0x402AEA: value_letter (cards.c:28)
==882==    by 0x402BC5: print_card (cards.c:61)
==882==    by 0x400C14: print_hand (deck.c:9)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882== 
==882== Invalid read of size 8
==882==    at 0x400C02: print_hand (deck.c:8)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==882== 
==882== 
==882== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==882==  Access not within mapped region at address 0x400001102
==882==    at 0x400C02: print_hand (deck.c:8)
==882==    by 0x4026EF: describe_hand (test-eval.c:74)
==882==    by 0x4028CF: main (test-eval.c:116)
==882==  If you believe this happened as a result of a stack
==882==  overflow in your program's main thread (unlikely but
==882==  possible), you can try to increase the size of the
==882==  main thread stack using the --main-stacksize= flag.
==882==  The main thread stack size used in this run was 8388608.
==882== 
==882== HEAP SUMMARY:
==882==     in use at exit: 928 bytes in 20 blocks
==882==   total heap usage: 86 allocs, 66 frees, 10,336 bytes allocated
==882== 
==882== LEAK SUMMARY:
==882==    definitely lost: 0 bytes in 0 blocks
==882==    indirectly lost: 0 bytes in 0 blocks
==882==      possibly lost: 0 bytes in 0 blocks
==882==    still reachable: 928 bytes in 20 blocks
==882==         suppressed: 0 bytes in 0 blocks
==882== Rerun with --leak-check=full to see details of leaked memory
==882== 
==882== For counts of detected and suppressed errors, rerun with: -v
==882== Use --track-origins=yes to see where uninitialised values come from
==882== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==887== Memcheck, a memory error detector
==887== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==887== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==887== Command: ./test-eval inp.10.txt
==887== Parent PID: 886
==887== 
vex amd64->IR: unhandled instruction bytes: 0x60 0x59 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==887== Invalid read of size 1
==887==    at 0x5205B86: ???
==887==    by 0x4026A4: describe_hand (test-eval.c:68)
==887==    by 0x4028EF: main (test-eval.c:119)
==887==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==887== 
==887== 
==887== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==887==  Access not within mapped region at address 0xFF000AA1
==887==    at 0x5205B86: ???
==887==    by 0x4026A4: describe_hand (test-eval.c:68)
==887==    by 0x4028EF: main (test-eval.c:119)
==887==  If you believe this happened as a result of a stack
==887==  overflow in your program's main thread (unlikely but
==887==  possible), you can try to increase the size of the
==887==  main thread stack using the --main-stacksize= flag.
==887==  The main thread stack size used in this run was 8388608.
==887== 
==887== HEAP SUMMARY:
==887==     in use at exit: 896 bytes in 18 blocks
==887==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==887== 
==887== LEAK SUMMARY:
==887==    definitely lost: 0 bytes in 0 blocks
==887==    indirectly lost: 0 bytes in 0 blocks
==887==      possibly lost: 0 bytes in 0 blocks
==887==    still reachable: 896 bytes in 18 blocks
==887==         suppressed: 0 bytes in 0 blocks
==887== Rerun with --leak-check=full to see details of leaked memory
==887== 
==887== For counts of detected and suppressed errors, rerun with: -v
==887== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
