Grading at Sun Jan 24 16:44:39 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1903== Memcheck, a memory error detector
==1903== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1903== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1903== Command: ./test-eval inp.1.txt
==1903== Parent PID: 1902
==1903== 
==1903== Use of uninitialised value of size 8
==1903==    at 0x400BFD: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903== 
==1903== Conditional jump or move depends on uninitialised value(s)
==1903==    at 0x402B84: suit_letter (cards.c:50)
==1903==    by 0x402BD2: print_card (cards.c:61)
==1903==    by 0x400C04: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903== 
==1903== Conditional jump or move depends on uninitialised value(s)
==1903==    at 0x402B89: suit_letter (cards.c:50)
==1903==    by 0x402BD2: print_card (cards.c:61)
==1903==    by 0x400C04: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903== 
==1903== Conditional jump or move depends on uninitialised value(s)
==1903==    at 0x402B06: value_letter (cards.c:28)
==1903==    by 0x402BE1: print_card (cards.c:61)
==1903==    by 0x400C04: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903== 
==1903== Invalid read of size 8
==1903==    at 0x400BFD: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1903== 
==1903== 
==1903== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1903==  Access not within mapped region at address 0x400001102
==1903==    at 0x400BFD: print_hand (deck.c:9)
==1903==    by 0x40270B: describe_hand (test-eval.c:74)
==1903==    by 0x4028EB: main (test-eval.c:116)
==1903==  If you believe this happened as a result of a stack
==1903==  overflow in your program's main thread (unlikely but
==1903==  possible), you can try to increase the size of the
==1903==  main thread stack using the --main-stacksize= flag.
==1903==  The main thread stack size used in this run was 8388608.
==1903== 
==1903== HEAP SUMMARY:
==1903==     in use at exit: 896 bytes in 18 blocks
==1903==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1903== 
==1903== LEAK SUMMARY:
==1903==    definitely lost: 0 bytes in 0 blocks
==1903==    indirectly lost: 0 bytes in 0 blocks
==1903==      possibly lost: 0 bytes in 0 blocks
==1903==    still reachable: 896 bytes in 18 blocks
==1903==         suppressed: 0 bytes in 0 blocks
==1903== Rerun with --leak-check=full to see details of leaked memory
==1903== 
==1903== For counts of detected and suppressed errors, rerun with: -v
==1903== Use --track-origins=yes to see where uninitialised values come from
==1903== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kh 9d 8c 3h 						Ac As Kh 9d 8c 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Kh 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Ks Js 9h 2c 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kc Ks Js 9h 2c 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Qd 9d 8c 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Qd 9d 8c 		      <
Hand 2:							      <
--------						      <
Ad Ah Qh Js 9c 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ad Ah Qh Js 9c 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh 7d 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kd Kh As 7d 3s 		      <
Hand 2:							      <
--------						      <
As Kh Qc Qd 9d 5c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Qc Qd As Kh 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 9h 7c 5c 5d 4s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 3 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5c 5d Js 9h 7c 		      <
Hand 2:							      <
--------						      <
Jd 9h 7c 6h 5h 5s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 4 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5h 5s Jd 9h 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Kd Ks 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Kd Ks 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Jd Js 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Jd Js 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 7d 7s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 8d 8s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 8)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 9d 4c 4s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 4)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 4c 4s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Qc Qs 9d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Qc Qs 5c 5s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Jc Jd Jh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 8c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 4h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 5h 3c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Qc Qd Qh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 5: Trying hands with straights
Valgrind returned an error status
==1947== Memcheck, a memory error detector
==1947== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1947== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1947== Command: ./test-eval inp.5.txt
==1947== Parent PID: 1946
==1947== 
==1947== Use of uninitialised value of size 8
==1947==    at 0x400BFD: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947== 
==1947== Conditional jump or move depends on uninitialised value(s)
==1947==    at 0x402B84: suit_letter (cards.c:50)
==1947==    by 0x402BD2: print_card (cards.c:61)
==1947==    by 0x400C04: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947== 
==1947== Conditional jump or move depends on uninitialised value(s)
==1947==    at 0x402B89: suit_letter (cards.c:50)
==1947==    by 0x402BD2: print_card (cards.c:61)
==1947==    by 0x400C04: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947== 
==1947== Conditional jump or move depends on uninitialised value(s)
==1947==    at 0x402B06: value_letter (cards.c:28)
==1947==    by 0x402BE1: print_card (cards.c:61)
==1947==    by 0x400C04: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947== 
==1947== Invalid read of size 8
==1947==    at 0x400BFD: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1947== 
==1947== 
==1947== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1947==  Access not within mapped region at address 0x400001102
==1947==    at 0x400BFD: print_hand (deck.c:9)
==1947==    by 0x40270B: describe_hand (test-eval.c:74)
==1947==    by 0x4028EB: main (test-eval.c:116)
==1947==  If you believe this happened as a result of a stack
==1947==  overflow in your program's main thread (unlikely but
==1947==  possible), you can try to increase the size of the
==1947==  main thread stack using the --main-stacksize= flag.
==1947==  The main thread stack size used in this run was 8388608.
==1947== 
==1947== HEAP SUMMARY:
==1947==     in use at exit: 864 bytes in 16 blocks
==1947==   total heap usage: 78 allocs, 62 frees, 10,080 bytes allocated
==1947== 
==1947== LEAK SUMMARY:
==1947==    definitely lost: 0 bytes in 0 blocks
==1947==    indirectly lost: 0 bytes in 0 blocks
==1947==      possibly lost: 0 bytes in 0 blocks
==1947==    still reachable: 864 bytes in 16 blocks
==1947==         suppressed: 0 bytes in 0 blocks
==1947== Rerun with --leak-check=full to see details of leaked memory
==1947== 
==1947== For counts of detected and suppressed errors, rerun with: -v
==1947== Use --track-origins=yes to see where uninitialised values come from
==1947== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==1952== Memcheck, a memory error detector
==1952== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1952== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1952== Command: ./test-eval inp.6.txt
==1952== Parent PID: 1951
==1952== 
==1952== Use of uninitialised value of size 8
==1952==    at 0x400BFD: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952== 
==1952== Conditional jump or move depends on uninitialised value(s)
==1952==    at 0x402B84: suit_letter (cards.c:50)
==1952==    by 0x402BD2: print_card (cards.c:61)
==1952==    by 0x400C04: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952== 
==1952== Conditional jump or move depends on uninitialised value(s)
==1952==    at 0x402B89: suit_letter (cards.c:50)
==1952==    by 0x402BD2: print_card (cards.c:61)
==1952==    by 0x400C04: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952== 
==1952== Conditional jump or move depends on uninitialised value(s)
==1952==    at 0x402B06: value_letter (cards.c:28)
==1952==    by 0x402BE1: print_card (cards.c:61)
==1952==    by 0x400C04: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952== 
==1952== Invalid read of size 8
==1952==    at 0x400BFD: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1952== 
==1952== 
==1952== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1952==  Access not within mapped region at address 0x400001102
==1952==    at 0x400BFD: print_hand (deck.c:9)
==1952==    by 0x40270B: describe_hand (test-eval.c:74)
==1952==    by 0x4028EB: main (test-eval.c:116)
==1952==  If you believe this happened as a result of a stack
==1952==  overflow in your program's main thread (unlikely but
==1952==  possible), you can try to increase the size of the
==1952==  main thread stack using the --main-stacksize= flag.
==1952==  The main thread stack size used in this run was 8388608.
==1952== 
==1952== HEAP SUMMARY:
==1952==     in use at exit: 896 bytes in 18 blocks
==1952==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==1952== 
==1952== LEAK SUMMARY:
==1952==    definitely lost: 0 bytes in 0 blocks
==1952==    indirectly lost: 0 bytes in 0 blocks
==1952==      possibly lost: 0 bytes in 0 blocks
==1952==    still reachable: 896 bytes in 18 blocks
==1952==         suppressed: 0 bytes in 0 blocks
==1952== Rerun with --leak-check=full to see details of leaked memory
==1952== 
==1952== For counts of detected and suppressed errors, rerun with: -v
==1952== Use --track-origins=yes to see where uninitialised values come from
==1952== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kd Kh Ks 8d 7c 7h 2c 						Kd Kh Ks 8d 7c 7h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - Secondary pair at index 4 (value 7)				 - Secondary pair at index 4 (value 7)
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Kd Kh Ks 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 7s 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 8c 8d 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 8c 8d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 6c 6d 6h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 6)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 6c 6d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Kh Ks 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Kh Ks 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Qh Qs 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value Q)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Qh Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Jh Js 9d 7c 7h 7s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value J)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7h 7s Jh Js 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==1970== Memcheck, a memory error detector
==1970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1970== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1970== Command: ./test-eval inp.8.txt
==1970== Parent PID: 1969
==1970== 
vex amd64->IR: unhandled instruction bytes: 0xF0 0x54 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==1970== Invalid read of size 1
==1970==    at 0x5205716: ???
==1970==    by 0x4026C0: describe_hand (test-eval.c:68)
==1970==    by 0x4028EB: main (test-eval.c:116)
==1970==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==1970== 
==1970== 
==1970== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1970==  Access not within mapped region at address 0xFF000AA1
==1970==    at 0x5205716: ???
==1970==    by 0x4026C0: describe_hand (test-eval.c:68)
==1970==    by 0x4028EB: main (test-eval.c:116)
==1970==  If you believe this happened as a result of a stack
==1970==  overflow in your program's main thread (unlikely but
==1970==  possible), you can try to increase the size of the
==1970==  main thread stack using the --main-stacksize= flag.
==1970==  The main thread stack size used in this run was 8388608.
==1970== 
==1970== HEAP SUMMARY:
==1970==     in use at exit: 896 bytes in 18 blocks
==1970==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1970== 
==1970== LEAK SUMMARY:
==1970==    definitely lost: 0 bytes in 0 blocks
==1970==    indirectly lost: 0 bytes in 0 blocks
==1970==      possibly lost: 0 bytes in 0 blocks
==1970==    still reachable: 896 bytes in 18 blocks
==1970==         suppressed: 0 bytes in 0 blocks
==1970== Rerun with --leak-check=full to see details of leaked memory
==1970== 
==1970== For counts of detected and suppressed errors, rerun with: -v
==1970== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==1975== Memcheck, a memory error detector
==1975== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1975== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1975== Command: ./test-eval inp.9.txt
==1975== Parent PID: 1974
==1975== 
==1975== Use of uninitialised value of size 8
==1975==    at 0x400BFD: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975== 
==1975== Conditional jump or move depends on uninitialised value(s)
==1975==    at 0x402B84: suit_letter (cards.c:50)
==1975==    by 0x402BD2: print_card (cards.c:61)
==1975==    by 0x400C04: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975== 
==1975== Conditional jump or move depends on uninitialised value(s)
==1975==    at 0x402B89: suit_letter (cards.c:50)
==1975==    by 0x402BD2: print_card (cards.c:61)
==1975==    by 0x400C04: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975== 
==1975== Conditional jump or move depends on uninitialised value(s)
==1975==    at 0x402B06: value_letter (cards.c:28)
==1975==    by 0x402BE1: print_card (cards.c:61)
==1975==    by 0x400C04: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975== 
==1975== Invalid read of size 8
==1975==    at 0x400BFD: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1975== 
==1975== 
==1975== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1975==  Access not within mapped region at address 0x400001102
==1975==    at 0x400BFD: print_hand (deck.c:9)
==1975==    by 0x40270B: describe_hand (test-eval.c:74)
==1975==    by 0x4028EB: main (test-eval.c:116)
==1975==  If you believe this happened as a result of a stack
==1975==  overflow in your program's main thread (unlikely but
==1975==  possible), you can try to increase the size of the
==1975==  main thread stack using the --main-stacksize= flag.
==1975==  The main thread stack size used in this run was 8388608.
==1975== 
==1975== HEAP SUMMARY:
==1975==     in use at exit: 928 bytes in 20 blocks
==1975==   total heap usage: 86 allocs, 66 frees, 10,336 bytes allocated
==1975== 
==1975== LEAK SUMMARY:
==1975==    definitely lost: 0 bytes in 0 blocks
==1975==    indirectly lost: 0 bytes in 0 blocks
==1975==      possibly lost: 0 bytes in 0 blocks
==1975==    still reachable: 928 bytes in 20 blocks
==1975==         suppressed: 0 bytes in 0 blocks
==1975== Rerun with --leak-check=full to see details of leaked memory
==1975== 
==1975== For counts of detected and suppressed errors, rerun with: -v
==1975== Use --track-origins=yes to see where uninitialised values come from
==1975== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1980== Memcheck, a memory error detector
==1980== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1980== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1980== Command: ./test-eval inp.10.txt
==1980== Parent PID: 1979
==1980== 
vex amd64->IR: unhandled instruction bytes: 0x60 0x59 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==1980== Invalid read of size 1
==1980==    at 0x5205B86: ???
==1980==    by 0x4026C0: describe_hand (test-eval.c:68)
==1980==    by 0x40290B: main (test-eval.c:119)
==1980==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==1980== 
==1980== 
==1980== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1980==  Access not within mapped region at address 0xFF000AA1
==1980==    at 0x5205B86: ???
==1980==    by 0x4026C0: describe_hand (test-eval.c:68)
==1980==    by 0x40290B: main (test-eval.c:119)
==1980==  If you believe this happened as a result of a stack
==1980==  overflow in your program's main thread (unlikely but
==1980==  possible), you can try to increase the size of the
==1980==  main thread stack using the --main-stacksize= flag.
==1980==  The main thread stack size used in this run was 8388608.
==1980== 
==1980== HEAP SUMMARY:
==1980==     in use at exit: 896 bytes in 18 blocks
==1980==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==1980== 
==1980== LEAK SUMMARY:
==1980==    definitely lost: 0 bytes in 0 blocks
==1980==    indirectly lost: 0 bytes in 0 blocks
==1980==      possibly lost: 0 bytes in 0 blocks
==1980==    still reachable: 896 bytes in 18 blocks
==1980==         suppressed: 0 bytes in 0 blocks
==1980== Rerun with --leak-check=full to see details of leaked memory
==1980== 
==1980== For counts of detected and suppressed errors, rerun with: -v
==1980== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
