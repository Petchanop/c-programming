Grading at Sun Jan 24 19:20:49 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==1186== Memcheck, a memory error detector
==1186== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1186== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1186== Command: ./test-eval inp.1.txt
==1186== Parent PID: 1185
==1186== 
==1186== Use of uninitialised value of size 8
==1186==    at 0x400C02: print_hand (deck.c:8)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186== 
==1186== Conditional jump or move depends on uninitialised value(s)
==1186==    at 0x402B68: suit_letter (cards.c:50)
==1186==    by 0x402BB6: print_card (cards.c:61)
==1186==    by 0x400C14: print_hand (deck.c:9)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186== 
==1186== Conditional jump or move depends on uninitialised value(s)
==1186==    at 0x402B6D: suit_letter (cards.c:50)
==1186==    by 0x402BB6: print_card (cards.c:61)
==1186==    by 0x400C14: print_hand (deck.c:9)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186== 
==1186== Conditional jump or move depends on uninitialised value(s)
==1186==    at 0x402AEA: value_letter (cards.c:28)
==1186==    by 0x402BC5: print_card (cards.c:61)
==1186==    by 0x400C14: print_hand (deck.c:9)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186== 
==1186== Invalid read of size 8
==1186==    at 0x400C02: print_hand (deck.c:8)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1186== 
==1186== 
==1186== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1186==  Access not within mapped region at address 0x400001102
==1186==    at 0x400C02: print_hand (deck.c:8)
==1186==    by 0x4026EF: describe_hand (test-eval.c:74)
==1186==    by 0x4028CF: main (test-eval.c:116)
==1186==  If you believe this happened as a result of a stack
==1186==  overflow in your program's main thread (unlikely but
==1186==  possible), you can try to increase the size of the
==1186==  main thread stack using the --main-stacksize= flag.
==1186==  The main thread stack size used in this run was 8388608.
==1186== 
==1186== HEAP SUMMARY:
==1186==     in use at exit: 896 bytes in 18 blocks
==1186==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1186== 
==1186== LEAK SUMMARY:
==1186==    definitely lost: 0 bytes in 0 blocks
==1186==    indirectly lost: 0 bytes in 0 blocks
==1186==      possibly lost: 0 bytes in 0 blocks
==1186==    still reachable: 896 bytes in 18 blocks
==1186==         suppressed: 0 bytes in 0 blocks
==1186== Rerun with --leak-check=full to see details of leaked memory
==1186== 
==1186== For counts of detected and suppressed errors, rerun with: -v
==1186== Use --track-origins=yes to see where uninitialised values come from
==1186== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kh 9d 8c 3h 						Ac As Kh 9d 8c 3h 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Kh 9d 8c 		      <
Hand 2:							      <
--------						      <
Kc Ks Js 9h 2c 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kc Ks Js 9h 2c 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Qd 9d 8c 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ac As Qd 9d 8c 		      <
Hand 2:							      <
--------						      <
Ad Ah Qh Js 9c 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Ad Ah Qh Js 9c 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh 7d 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value K)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Kd Kh As 7d 3s 		      <
Hand 2:							      <
--------						      <
As Kh Qc Qd 9d 5c 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: Qc Qd As Kh 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 9h 7c 5c 5d 4s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 3 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5c 5d Js 9h 7c 		      <
Hand 2:							      <
--------						      <
Jd 9h 7c 6h 5h 5s 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 4 / value 5)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: PAIR			      <
 - 5 cards used for hand: 5h 5s Jd 9h 7c 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Ac As Kc Kh 4d 							Ac As Kc Kh 4d 
 - No flush							 - No flush
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Kd Ks 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Kd Ks 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Jd Js 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value J)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Jd Js 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kc Ks Qc Qh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value K)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Kc Ks Qc Qh 4d 		      <
Hand 2:							      <
--------						      <
Ad Ah Qd Qs 3h 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value Q)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ad Ah Qd Qs 3h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 7d 7s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7d 7s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Js 7c 7h 4s 3d 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 7)   <
 - Secondary pair at index 4 (value 3)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 7c 7h 3d 3h Js 		      <
Hand 2:							      <
--------						      <
Qs 8d 8s 5c 2d 2h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 1 / value 8)   <
 - Secondary pair at index 4 (value 2)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: 8d 8s 2d 2h Qs 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 9d 4c 4s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 4)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 4c 4s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Qc Qs 9d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Qc Qs 5c 5s 9d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Jc Js 9d 5c 5s 4h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 9d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 3h 					      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ac As Kc Kh 4d 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value A)   <
 - Secondary pair at index 2 (value K)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Ac As Kc Kh 4d 		      <
Hand 2:							      <
--------						      <
Jc Js 8d 5c 5s 						      <
 - No flush						      <
 - The most of a kind is 2 of a kind (at index 0 / value J)   <
 - Secondary pair at index 3 (value 5)			      <
 - evaluate_hand's ranking: TWO_PAIR			      <
 - 5 cards used for hand: Jc Js 5c 5s 8d 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Jc Jd Jh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 8c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 4h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Qc Qd Qh 7c 5h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Hand 2:							      <
--------						      <
Qc Qd Qh 7c 5h 3c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Qc Qd Qh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value Q)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Qc Qd Qh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Kc 		      <
Hand 2:							      <
--------						      <
As Qc Jc Jd Jh 7c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 2 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: THREE_OF_A_KIND		      <
 - 5 cards used for hand: Jc Jd Jh As Qc 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 5: Trying hands with straights
Valgrind returned an error status
==1230== Memcheck, a memory error detector
==1230== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1230== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1230== Command: ./test-eval inp.5.txt
==1230== Parent PID: 1229
==1230== 
==1230== Use of uninitialised value of size 8
==1230==    at 0x400C02: print_hand (deck.c:8)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230== 
==1230== Conditional jump or move depends on uninitialised value(s)
==1230==    at 0x402B68: suit_letter (cards.c:50)
==1230==    by 0x402BB6: print_card (cards.c:61)
==1230==    by 0x400C14: print_hand (deck.c:9)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230== 
==1230== Conditional jump or move depends on uninitialised value(s)
==1230==    at 0x402B6D: suit_letter (cards.c:50)
==1230==    by 0x402BB6: print_card (cards.c:61)
==1230==    by 0x400C14: print_hand (deck.c:9)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230== 
==1230== Conditional jump or move depends on uninitialised value(s)
==1230==    at 0x402AEA: value_letter (cards.c:28)
==1230==    by 0x402BC5: print_card (cards.c:61)
==1230==    by 0x400C14: print_hand (deck.c:9)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230== 
==1230== Invalid read of size 8
==1230==    at 0x400C02: print_hand (deck.c:8)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1230== 
==1230== 
==1230== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1230==  Access not within mapped region at address 0x400001102
==1230==    at 0x400C02: print_hand (deck.c:8)
==1230==    by 0x4026EF: describe_hand (test-eval.c:74)
==1230==    by 0x4028CF: main (test-eval.c:116)
==1230==  If you believe this happened as a result of a stack
==1230==  overflow in your program's main thread (unlikely but
==1230==  possible), you can try to increase the size of the
==1230==  main thread stack using the --main-stacksize= flag.
==1230==  The main thread stack size used in this run was 8388608.
==1230== 
==1230== HEAP SUMMARY:
==1230==     in use at exit: 864 bytes in 16 blocks
==1230==   total heap usage: 78 allocs, 62 frees, 10,080 bytes allocated
==1230== 
==1230== LEAK SUMMARY:
==1230==    definitely lost: 0 bytes in 0 blocks
==1230==    indirectly lost: 0 bytes in 0 blocks
==1230==      possibly lost: 0 bytes in 0 blocks
==1230==    still reachable: 864 bytes in 16 blocks
==1230==         suppressed: 0 bytes in 0 blocks
==1230== Rerun with --leak-check=full to see details of leaked memory
==1230== 
==1230== For counts of detected and suppressed errors, rerun with: -v
==1230== Use --track-origins=yes to see where uninitialised values come from
==1230== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==1235== Memcheck, a memory error detector
==1235== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1235== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1235== Command: ./test-eval inp.6.txt
==1235== Parent PID: 1234
==1235== 
==1235== Use of uninitialised value of size 8
==1235==    at 0x400C02: print_hand (deck.c:8)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235== 
==1235== Conditional jump or move depends on uninitialised value(s)
==1235==    at 0x402B68: suit_letter (cards.c:50)
==1235==    by 0x402BB6: print_card (cards.c:61)
==1235==    by 0x400C14: print_hand (deck.c:9)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235== 
==1235== Conditional jump or move depends on uninitialised value(s)
==1235==    at 0x402B6D: suit_letter (cards.c:50)
==1235==    by 0x402BB6: print_card (cards.c:61)
==1235==    by 0x400C14: print_hand (deck.c:9)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235== 
==1235== Conditional jump or move depends on uninitialised value(s)
==1235==    at 0x402AEA: value_letter (cards.c:28)
==1235==    by 0x402BC5: print_card (cards.c:61)
==1235==    by 0x400C14: print_hand (deck.c:9)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235== 
==1235== Invalid read of size 8
==1235==    at 0x400C02: print_hand (deck.c:8)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1235== 
==1235== 
==1235== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1235==  Access not within mapped region at address 0x400001102
==1235==    at 0x400C02: print_hand (deck.c:8)
==1235==    by 0x4026EF: describe_hand (test-eval.c:74)
==1235==    by 0x4028CF: main (test-eval.c:116)
==1235==  If you believe this happened as a result of a stack
==1235==  overflow in your program's main thread (unlikely but
==1235==  possible), you can try to increase the size of the
==1235==  main thread stack using the --main-stacksize= flag.
==1235==  The main thread stack size used in this run was 8388608.
==1235== 
==1235== HEAP SUMMARY:
==1235==     in use at exit: 896 bytes in 18 blocks
==1235==   total heap usage: 90 allocs, 72 frees, 10,448 bytes allocated
==1235== 
==1235== LEAK SUMMARY:
==1235==    definitely lost: 0 bytes in 0 blocks
==1235==    indirectly lost: 0 bytes in 0 blocks
==1235==      possibly lost: 0 bytes in 0 blocks
==1235==    still reachable: 896 bytes in 18 blocks
==1235==         suppressed: 0 bytes in 0 blocks
==1235== Rerun with --leak-check=full to see details of leaked memory
==1235== 
==1235== For counts of detected and suppressed errors, rerun with: -v
==1235== Use --track-origins=yes to see where uninitialised values come from
==1235== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
 Checking the output 
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kd Kh Ks 8d 7c 7h 2c 						Kd Kh Ks 8d 7c 7h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - Secondary pair at index 4 (value 7)				 - Secondary pair at index 4 (value 7)
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Kd Kh Ks 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 2h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 7c 7h 7s 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 7c 7h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kd Kh Ks 8d 7c 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Qd Qh Qs 9h 8c 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value Q)   <
 - Secondary pair at index 4 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Qd Qh Qs 8c 8h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 8c 8d 8h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 8)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 8c 8d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
As Kd Kh Ks 7c 7h 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 1 / value K)   <
 - Secondary pair at index 4 (value 7)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Kd Kh Ks 7c 7h 		      <
Hand 2:							      <
--------						      <
Ad Ah As 6c 6d 6h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 0 / value A)   <
 - Secondary pair at index 3 (value 6)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: Ad Ah As 6c 6d 		      <
Comparison : 						      <
--------------						      <
Hand 2 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Kh Ks 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Kh Ks 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Qh Qs 9d 3c 3h 3s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 3)   <
 - Secondary pair at index 0 (value Q)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 3c 3h 3s Qh Qs 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Kh Ks 8c 7c 7d 7h 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value K)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7d 7h Kh Ks 		      <
Hand 2:							      <
--------						      <
Jh Js 9d 7c 7h 7s 2c 					      <
 - No flush						      <
 - The most of a kind is 3 of a kind (at index 3 / value 7)   <
 - Secondary pair at index 0 (value J)			      <
 - evaluate_hand's ranking: FULL_HOUSE			      <
 - 5 cards used for hand: 7c 7h 7s Jh Js 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==1253== Memcheck, a memory error detector
==1253== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1253== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1253== Command: ./test-eval inp.8.txt
==1253== Parent PID: 1252
==1253== 
vex amd64->IR: unhandled instruction bytes: 0xF0 0x54 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==1253== Invalid read of size 1
==1253==    at 0x5205716: ???
==1253==    by 0x4026A4: describe_hand (test-eval.c:68)
==1253==    by 0x4028CF: main (test-eval.c:116)
==1253==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==1253== 
==1253== 
==1253== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1253==  Access not within mapped region at address 0xFF000AA1
==1253==    at 0x5205716: ???
==1253==    by 0x4026A4: describe_hand (test-eval.c:68)
==1253==    by 0x4028CF: main (test-eval.c:116)
==1253==  If you believe this happened as a result of a stack
==1253==  overflow in your program's main thread (unlikely but
==1253==  possible), you can try to increase the size of the
==1253==  main thread stack using the --main-stacksize= flag.
==1253==  The main thread stack size used in this run was 8388608.
==1253== 
==1253== HEAP SUMMARY:
==1253==     in use at exit: 896 bytes in 18 blocks
==1253==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==1253== 
==1253== LEAK SUMMARY:
==1253==    definitely lost: 0 bytes in 0 blocks
==1253==    indirectly lost: 0 bytes in 0 blocks
==1253==      possibly lost: 0 bytes in 0 blocks
==1253==    still reachable: 896 bytes in 18 blocks
==1253==         suppressed: 0 bytes in 0 blocks
==1253== Rerun with --leak-check=full to see details of leaked memory
==1253== 
==1253== For counts of detected and suppressed errors, rerun with: -v
==1253== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==1258== Memcheck, a memory error detector
==1258== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1258== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1258== Command: ./test-eval inp.9.txt
==1258== Parent PID: 1257
==1258== 
==1258== Use of uninitialised value of size 8
==1258==    at 0x400C02: print_hand (deck.c:8)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258== 
==1258== Conditional jump or move depends on uninitialised value(s)
==1258==    at 0x402B68: suit_letter (cards.c:50)
==1258==    by 0x402BB6: print_card (cards.c:61)
==1258==    by 0x400C14: print_hand (deck.c:9)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258== 
==1258== Conditional jump or move depends on uninitialised value(s)
==1258==    at 0x402B6D: suit_letter (cards.c:50)
==1258==    by 0x402BB6: print_card (cards.c:61)
==1258==    by 0x400C14: print_hand (deck.c:9)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258== 
==1258== Conditional jump or move depends on uninitialised value(s)
==1258==    at 0x402AEA: value_letter (cards.c:28)
==1258==    by 0x402BC5: print_card (cards.c:61)
==1258==    by 0x400C14: print_hand (deck.c:9)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258== 
==1258== Invalid read of size 8
==1258==    at 0x400C02: print_hand (deck.c:8)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258==  Address 0x400001102 is not stack'd, malloc'd or (recently) free'd
==1258== 
==1258== 
==1258== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1258==  Access not within mapped region at address 0x400001102
==1258==    at 0x400C02: print_hand (deck.c:8)
==1258==    by 0x4026EF: describe_hand (test-eval.c:74)
==1258==    by 0x4028CF: main (test-eval.c:116)
==1258==  If you believe this happened as a result of a stack
==1258==  overflow in your program's main thread (unlikely but
==1258==  possible), you can try to increase the size of the
==1258==  main thread stack using the --main-stacksize= flag.
==1258==  The main thread stack size used in this run was 8388608.
==1258== 
==1258== HEAP SUMMARY:
==1258==     in use at exit: 928 bytes in 20 blocks
==1258==   total heap usage: 86 allocs, 66 frees, 10,336 bytes allocated
==1258== 
==1258== LEAK SUMMARY:
==1258==    definitely lost: 0 bytes in 0 blocks
==1258==    indirectly lost: 0 bytes in 0 blocks
==1258==      possibly lost: 0 bytes in 0 blocks
==1258==    still reachable: 928 bytes in 20 blocks
==1258==         suppressed: 0 bytes in 0 blocks
==1258== Rerun with --leak-check=full to see details of leaked memory
==1258== 
==1258== For counts of detected and suppressed errors, rerun with: -v
==1258== Use --track-origins=yes to see where uninitialised values come from
==1258== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1263== Memcheck, a memory error detector
==1263== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1263== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1263== Command: ./test-eval inp.10.txt
==1263== Parent PID: 1262
==1263== 
vex amd64->IR: unhandled instruction bytes: 0x60 0x59 0x20 0x5 0x0 0x0 0x0 0x0
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==1263== Invalid read of size 1
==1263==    at 0x5205B86: ???
==1263==    by 0x4026A4: describe_hand (test-eval.c:68)
==1263==    by 0x4028EF: main (test-eval.c:119)
==1263==  Address 0xff000aa1 is not stack'd, malloc'd or (recently) free'd
==1263== 
==1263== 
==1263== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1263==  Access not within mapped region at address 0xFF000AA1
==1263==    at 0x5205B86: ???
==1263==    by 0x4026A4: describe_hand (test-eval.c:68)
==1263==    by 0x4028EF: main (test-eval.c:119)
==1263==  If you believe this happened as a result of a stack
==1263==  overflow in your program's main thread (unlikely but
==1263==  possible), you can try to increase the size of the
==1263==  main thread stack using the --main-stacksize= flag.
==1263==  The main thread stack size used in this run was 8388608.
==1263== 
==1263== HEAP SUMMARY:
==1263==     in use at exit: 896 bytes in 18 blocks
==1263==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==1263== 
==1263== LEAK SUMMARY:
==1263==    definitely lost: 0 bytes in 0 blocks
==1263==    indirectly lost: 0 bytes in 0 blocks
==1263==      possibly lost: 0 bytes in 0 blocks
==1263==    still reachable: 896 bytes in 18 blocks
==1263==         suppressed: 0 bytes in 0 blocks
==1263== Rerun with --leak-check=full to see details of leaked memory
==1263== 
==1263== For counts of detected and suppressed errors, rerun with: -v
==1263== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
