Grading at Wed Mar 10 10:15:26 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==2473== Memcheck, a memory error detector
==2473== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2473== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2473== Command: ./tester hands.txt draw.txt
==2473== Parent PID: 2472
==2473== 
==2473== Invalid read of size 8
==2473==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x401B8E: main (test-input.c:69)
==2473==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2473== 
==2473== 
==2473== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2473==  Access not within mapped region at address 0x8
==2473==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2473==    by 0x401B8E: main (test-input.c:69)
==2473==  If you believe this happened as a result of a stack
==2473==  overflow in your program's main thread (unlikely but
==2473==  possible), you can try to increase the size of the
==2473==  main thread stack using the --main-stacksize= flag.
==2473==  The main thread stack size used in this run was 8388608.
==2473== 
==2473== HEAP SUMMARY:
==2473==     in use at exit: 960 bytes in 12 blocks
==2473==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2473== 
==2473== LEAK SUMMARY:
==2473==    definitely lost: 56 bytes in 1 blocks
==2473==    indirectly lost: 56 bytes in 7 blocks
==2473==      possibly lost: 0 bytes in 0 blocks
==2473==    still reachable: 848 bytes in 4 blocks
==2473==         suppressed: 0 bytes in 0 blocks
==2473== Rerun with --leak-check=full to see details of leaked memory
==2473== 
==2473== For counts of detected and suppressed errors, rerun with: -v
==2473== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==2478== Memcheck, a memory error detector
==2478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2478== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2478== Command: ./tester hands.txt draw.txt
==2478== Parent PID: 2477
==2478== 
==2478== Invalid read of size 8
==2478==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x401B8E: main (test-input.c:69)
==2478==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2478== 
==2478== 
==2478== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2478==  Access not within mapped region at address 0x8
==2478==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2478==    by 0x401B8E: main (test-input.c:69)
==2478==  If you believe this happened as a result of a stack
==2478==  overflow in your program's main thread (unlikely but
==2478==  possible), you can try to increase the size of the
==2478==  main thread stack using the --main-stacksize= flag.
==2478==  The main thread stack size used in this run was 8388608.
==2478== 
==2478== HEAP SUMMARY:
==2478==     in use at exit: 960 bytes in 12 blocks
==2478==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2478== 
==2478== LEAK SUMMARY:
==2478==    definitely lost: 56 bytes in 1 blocks
==2478==    indirectly lost: 56 bytes in 7 blocks
==2478==      possibly lost: 0 bytes in 0 blocks
==2478==    still reachable: 848 bytes in 4 blocks
==2478==         suppressed: 0 bytes in 0 blocks
==2478== Rerun with --leak-check=full to see details of leaked memory
==2478== 
==2478== For counts of detected and suppressed errors, rerun with: -v
==2478== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2484== Memcheck, a memory error detector
==2484== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2484== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2484== Command: ./tester h.txt d.txt
==2484== Parent PID: 2483
==2484== 
==2484== Invalid read of size 8
==2484==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x401B8E: main (test-input.c:69)
==2484==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2484== 
==2484== 
==2484== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2484==  Access not within mapped region at address 0x8
==2484==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2484==    by 0x401B8E: main (test-input.c:69)
==2484==  If you believe this happened as a result of a stack
==2484==  overflow in your program's main thread (unlikely but
==2484==  possible), you can try to increase the size of the
==2484==  main thread stack using the --main-stacksize= flag.
==2484==  The main thread stack size used in this run was 8388608.
==2484== 
==2484== HEAP SUMMARY:
==2484==     in use at exit: 960 bytes in 12 blocks
==2484==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2484== 
==2484== LEAK SUMMARY:
==2484==    definitely lost: 56 bytes in 1 blocks
==2484==    indirectly lost: 56 bytes in 7 blocks
==2484==      possibly lost: 0 bytes in 0 blocks
==2484==    still reachable: 848 bytes in 4 blocks
==2484==         suppressed: 0 bytes in 0 blocks
==2484== Rerun with --leak-check=full to see details of leaked memory
==2484== 
==2484== For counts of detected and suppressed errors, rerun with: -v
==2484== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2490== Memcheck, a memory error detector
==2490== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2490== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2490== Command: ./tester i1 i2
==2490== Parent PID: 2489
==2490== 
==2490== Invalid read of size 8
==2490==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x401B8E: main (test-input.c:69)
==2490==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2490== 
==2490== 
==2490== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2490==  Access not within mapped region at address 0x8
==2490==    at 0x4013A9: print_hand (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x400C1D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x400CB0: read_input (in /graderhome/work/c4prj2_input/tester)
==2490==    by 0x401B8E: main (test-input.c:69)
==2490==  If you believe this happened as a result of a stack
==2490==  overflow in your program's main thread (unlikely but
==2490==  possible), you can try to increase the size of the
==2490==  main thread stack using the --main-stacksize= flag.
==2490==  The main thread stack size used in this run was 8388608.
==2490== 
==2490== HEAP SUMMARY:
==2490==     in use at exit: 960 bytes in 12 blocks
==2490==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2490== 
==2490== LEAK SUMMARY:
==2490==    definitely lost: 56 bytes in 1 blocks
==2490==    indirectly lost: 56 bytes in 7 blocks
==2490==      possibly lost: 0 bytes in 0 blocks
==2490==    still reachable: 848 bytes in 4 blocks
==2490==         suppressed: 0 bytes in 0 blocks
==2490== Rerun with --leak-check=full to see details of leaked memory
==2490== 
==2490== For counts of detected and suppressed errors, rerun with: -v
==2490== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
