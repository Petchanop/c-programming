Grading at Wed Mar 10 10:09:23 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==2013== Memcheck, a memory error detector
==2013== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2013== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2013== Command: ./tester hands.txt draw.txt
==2013== Parent PID: 2012
==2013== 
==2013== Invalid read of size 8
==2013==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x401B76: main (test-input.c:69)
==2013==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2013== 
==2013== 
==2013== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2013==  Access not within mapped region at address 0x8
==2013==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2013==    by 0x401B76: main (test-input.c:69)
==2013==  If you believe this happened as a result of a stack
==2013==  overflow in your program's main thread (unlikely but
==2013==  possible), you can try to increase the size of the
==2013==  main thread stack using the --main-stacksize= flag.
==2013==  The main thread stack size used in this run was 8388608.
==2013== 
==2013== HEAP SUMMARY:
==2013==     in use at exit: 960 bytes in 12 blocks
==2013==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2013== 
==2013== LEAK SUMMARY:
==2013==    definitely lost: 56 bytes in 1 blocks
==2013==    indirectly lost: 56 bytes in 7 blocks
==2013==      possibly lost: 0 bytes in 0 blocks
==2013==    still reachable: 848 bytes in 4 blocks
==2013==         suppressed: 0 bytes in 0 blocks
==2013== Rerun with --leak-check=full to see details of leaked memory
==2013== 
==2013== For counts of detected and suppressed errors, rerun with: -v
==2013== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==2018== Memcheck, a memory error detector
==2018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2018== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2018== Command: ./tester hands.txt draw.txt
==2018== Parent PID: 2017
==2018== 
==2018== Invalid read of size 8
==2018==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x401B76: main (test-input.c:69)
==2018==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2018== 
==2018== 
==2018== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2018==  Access not within mapped region at address 0x8
==2018==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2018==    by 0x401B76: main (test-input.c:69)
==2018==  If you believe this happened as a result of a stack
==2018==  overflow in your program's main thread (unlikely but
==2018==  possible), you can try to increase the size of the
==2018==  main thread stack using the --main-stacksize= flag.
==2018==  The main thread stack size used in this run was 8388608.
==2018== 
==2018== HEAP SUMMARY:
==2018==     in use at exit: 960 bytes in 12 blocks
==2018==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2018== 
==2018== LEAK SUMMARY:
==2018==    definitely lost: 56 bytes in 1 blocks
==2018==    indirectly lost: 56 bytes in 7 blocks
==2018==      possibly lost: 0 bytes in 0 blocks
==2018==    still reachable: 848 bytes in 4 blocks
==2018==         suppressed: 0 bytes in 0 blocks
==2018== Rerun with --leak-check=full to see details of leaked memory
==2018== 
==2018== For counts of detected and suppressed errors, rerun with: -v
==2018== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2024== Memcheck, a memory error detector
==2024== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2024== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2024== Command: ./tester h.txt d.txt
==2024== Parent PID: 2023
==2024== 
==2024== Invalid read of size 8
==2024==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x401B76: main (test-input.c:69)
==2024==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2024== 
==2024== 
==2024== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2024==  Access not within mapped region at address 0x8
==2024==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2024==    by 0x401B76: main (test-input.c:69)
==2024==  If you believe this happened as a result of a stack
==2024==  overflow in your program's main thread (unlikely but
==2024==  possible), you can try to increase the size of the
==2024==  main thread stack using the --main-stacksize= flag.
==2024==  The main thread stack size used in this run was 8388608.
==2024== 
==2024== HEAP SUMMARY:
==2024==     in use at exit: 960 bytes in 12 blocks
==2024==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2024== 
==2024== LEAK SUMMARY:
==2024==    definitely lost: 56 bytes in 1 blocks
==2024==    indirectly lost: 56 bytes in 7 blocks
==2024==      possibly lost: 0 bytes in 0 blocks
==2024==    still reachable: 848 bytes in 4 blocks
==2024==         suppressed: 0 bytes in 0 blocks
==2024== Rerun with --leak-check=full to see details of leaked memory
==2024== 
==2024== For counts of detected and suppressed errors, rerun with: -v
==2024== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2030== Memcheck, a memory error detector
==2030== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2030== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2030== Command: ./tester i1 i2
==2030== Parent PID: 2029
==2030== 
==2030== Invalid read of size 8
==2030==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x401B76: main (test-input.c:69)
==2030==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2030== 
==2030== 
==2030== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2030==  Access not within mapped region at address 0x8
==2030==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2030==    by 0x401B76: main (test-input.c:69)
==2030==  If you believe this happened as a result of a stack
==2030==  overflow in your program's main thread (unlikely but
==2030==  possible), you can try to increase the size of the
==2030==  main thread stack using the --main-stacksize= flag.
==2030==  The main thread stack size used in this run was 8388608.
==2030== 
==2030== HEAP SUMMARY:
==2030==     in use at exit: 960 bytes in 12 blocks
==2030==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2030== 
==2030== LEAK SUMMARY:
==2030==    definitely lost: 56 bytes in 1 blocks
==2030==    indirectly lost: 56 bytes in 7 blocks
==2030==      possibly lost: 0 bytes in 0 blocks
==2030==    still reachable: 848 bytes in 4 blocks
==2030==         suppressed: 0 bytes in 0 blocks
==2030== Rerun with --leak-check=full to see details of leaked memory
==2030== 
==2030== For counts of detected and suppressed errors, rerun with: -v
==2030== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
