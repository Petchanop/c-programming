Grading at Tue Mar  9 11:01:37 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==2412== Memcheck, a memory error detector
==2412== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2412== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2412== Command: ./tester hands.txt draw.txt
==2412== Parent PID: 2411
==2412== 
==2412== Invalid read of size 8
==2412==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2412==    by 0x401A42: main (test-input.c:81)
==2412==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2412== 
==2412== 
==2412== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2412==  Access not within mapped region at address 0x8
==2412==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2412==    by 0x401A42: main (test-input.c:81)
==2412==  If you believe this happened as a result of a stack
==2412==  overflow in your program's main thread (unlikely but
==2412==  possible), you can try to increase the size of the
==2412==  main thread stack using the --main-stacksize= flag.
==2412==  The main thread stack size used in this run was 8388608.
==2412== 
==2412== HEAP SUMMARY:
==2412==     in use at exit: 328 bytes in 14 blocks
==2412==   total heap usage: 28 allocs, 14 frees, 14,144 bytes allocated
==2412== 
==2412== LEAK SUMMARY:
==2412==    definitely lost: 56 bytes in 1 blocks
==2412==    indirectly lost: 56 bytes in 7 blocks
==2412==      possibly lost: 168 bytes in 1 blocks
==2412==    still reachable: 48 bytes in 5 blocks
==2412==         suppressed: 0 bytes in 0 blocks
==2412== Rerun with --leak-check=full to see details of leaked memory
==2412== 
==2412== For counts of detected and suppressed errors, rerun with: -v
==2412== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==2417== Memcheck, a memory error detector
==2417== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2417== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2417== Command: ./tester hands.txt draw.txt
==2417== Parent PID: 2416
==2417== 
==2417== Invalid read of size 8
==2417==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2417==    by 0x401A42: main (test-input.c:81)
==2417==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2417== 
==2417== 
==2417== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2417==  Access not within mapped region at address 0x8
==2417==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2417==    by 0x401A42: main (test-input.c:81)
==2417==  If you believe this happened as a result of a stack
==2417==  overflow in your program's main thread (unlikely but
==2417==  possible), you can try to increase the size of the
==2417==  main thread stack using the --main-stacksize= flag.
==2417==  The main thread stack size used in this run was 8388608.
==2417== 
==2417== HEAP SUMMARY:
==2417==     in use at exit: 1,192 bytes in 41 blocks
==2417==   total heap usage: 79 allocs, 38 frees, 15,608 bytes allocated
==2417== 
==2417== LEAK SUMMARY:
==2417==    definitely lost: 728 bytes in 7 blocks
==2417==    indirectly lost: 224 bytes in 28 blocks
==2417==      possibly lost: 168 bytes in 1 blocks
==2417==    still reachable: 72 bytes in 5 blocks
==2417==         suppressed: 0 bytes in 0 blocks
==2417== Rerun with --leak-check=full to see details of leaked memory
==2417== 
==2417== For counts of detected and suppressed errors, rerun with: -v
==2417== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2423== Memcheck, a memory error detector
==2423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2423== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2423== Command: ./tester h.txt d.txt
==2423== Parent PID: 2422
==2423== 
==2423== Invalid read of size 8
==2423==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2423==    by 0x401A42: main (test-input.c:81)
==2423==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2423== 
==2423== 
==2423== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2423==  Access not within mapped region at address 0x8
==2423==    at 0x400DBF: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==2423==    by 0x401A42: main (test-input.c:81)
==2423==  If you believe this happened as a result of a stack
==2423==  overflow in your program's main thread (unlikely but
==2423==  possible), you can try to increase the size of the
==2423==  main thread stack using the --main-stacksize= flag.
==2423==  The main thread stack size used in this run was 8388608.
==2423== 
==2423== HEAP SUMMARY:
==2423==     in use at exit: 1,504 bytes in 62 blocks
==2423==   total heap usage: 115 allocs, 53 frees, 16,160 bytes allocated
==2423== 
==2423== LEAK SUMMARY:
==2423==    definitely lost: 728 bytes in 7 blocks
==2423==    indirectly lost: 224 bytes in 28 blocks
==2423==      possibly lost: 168 bytes in 1 blocks
==2423==    still reachable: 384 bytes in 26 blocks
==2423==         suppressed: 0 bytes in 0 blocks
==2423== Rerun with --leak-check=full to see details of leaked memory
==2423== 
==2423== For counts of detected and suppressed errors, rerun with: -v
==2423== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2429== Memcheck, a memory error detector
==2429== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2429== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2429== Command: ./tester i1 i2
==2429== Parent PID: 2428
==2429== 
==2429== Use of uninitialised value of size 8
==2429==    at 0x400D6F: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400C8F: read_input (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x401968: main (test-input.c:69)
==2429== 
==2429== Invalid write of size 8
==2429==    at 0x400D6F: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400C8F: read_input (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x401968: main (test-input.c:69)
==2429==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2429== 
==2429== 
==2429== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2429==  Access not within mapped region at address 0x0
==2429==    at 0x400D6F: add_future_card (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x400C8F: read_input (in /graderhome/work/c4prj2_input/tester)
==2429==    by 0x401968: main (test-input.c:69)
==2429==  If you believe this happened as a result of a stack
==2429==  overflow in your program's main thread (unlikely but
==2429==  possible), you can try to increase the size of the
==2429==  main thread stack using the --main-stacksize= flag.
==2429==  The main thread stack size used in this run was 8388608.
==2429== 
==2429== HEAP SUMMARY:
==2429==     in use at exit: 2,160 bytes in 45 blocks
==2429==   total heap usage: 79 allocs, 34 frees, 7,128 bytes allocated
==2429== 
==2429== LEAK SUMMARY:
==2429==    definitely lost: 936 bytes in 8 blocks
==2429==    indirectly lost: 232 bytes in 29 blocks
==2429==      possibly lost: 0 bytes in 0 blocks
==2429==    still reachable: 992 bytes in 8 blocks
==2429==         suppressed: 0 bytes in 0 blocks
==2429== Rerun with --leak-check=full to see details of leaked memory
==2429== 
==2429== For counts of detected and suppressed errors, rerun with: -v
==2429== Use --track-origins=yes to see where uninitialised values come from
==2429== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
