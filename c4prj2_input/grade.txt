Grading at Wed Mar 10 09:55:56 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1632== Memcheck, a memory error detector
==1632== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1632== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1632== Command: ./tester hands.txt draw.txt
==1632== Parent PID: 1631
==1632== 
==1632== Invalid read of size 8
==1632==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1632==    by 0x401C22: main (test-input.c:81)
==1632==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1632== 
==1632== 
==1632== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1632==  Access not within mapped region at address 0x8
==1632==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1632==    by 0x401C22: main (test-input.c:81)
==1632==  If you believe this happened as a result of a stack
==1632==  overflow in your program's main thread (unlikely but
==1632==  possible), you can try to increase the size of the
==1632==  main thread stack using the --main-stacksize= flag.
==1632==  The main thread stack size used in this run was 8388608.
==1632== 
==1632== HEAP SUMMARY:
==1632==     in use at exit: 328 bytes in 14 blocks
==1632==   total heap usage: 28 allocs, 14 frees, 14,144 bytes allocated
==1632== 
==1632== LEAK SUMMARY:
==1632==    definitely lost: 56 bytes in 1 blocks
==1632==    indirectly lost: 56 bytes in 7 blocks
==1632==      possibly lost: 168 bytes in 1 blocks
==1632==    still reachable: 48 bytes in 5 blocks
==1632==         suppressed: 0 bytes in 0 blocks
==1632== Rerun with --leak-check=full to see details of leaked memory
==1632== 
==1632== For counts of detected and suppressed errors, rerun with: -v
==1632== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1637== Memcheck, a memory error detector
==1637== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1637== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1637== Command: ./tester hands.txt draw.txt
==1637== Parent PID: 1636
==1637== 
==1637== Invalid read of size 8
==1637==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1637==    by 0x401C22: main (test-input.c:81)
==1637==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1637== 
==1637== 
==1637== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1637==  Access not within mapped region at address 0x8
==1637==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1637==    by 0x401C22: main (test-input.c:81)
==1637==  If you believe this happened as a result of a stack
==1637==  overflow in your program's main thread (unlikely but
==1637==  possible), you can try to increase the size of the
==1637==  main thread stack using the --main-stacksize= flag.
==1637==  The main thread stack size used in this run was 8388608.
==1637== 
==1637== HEAP SUMMARY:
==1637==     in use at exit: 1,168 bytes in 41 blocks
==1637==   total heap usage: 79 allocs, 38 frees, 15,560 bytes allocated
==1637== 
==1637== LEAK SUMMARY:
==1637==    definitely lost: 728 bytes in 7 blocks
==1637==    indirectly lost: 224 bytes in 28 blocks
==1637==      possibly lost: 168 bytes in 1 blocks
==1637==    still reachable: 48 bytes in 5 blocks
==1637==         suppressed: 0 bytes in 0 blocks
==1637== Rerun with --leak-check=full to see details of leaked memory
==1637== 
==1637== For counts of detected and suppressed errors, rerun with: -v
==1637== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1643== Memcheck, a memory error detector
==1643== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1643== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1643== Command: ./tester h.txt d.txt
==1643== Parent PID: 1642
==1643== 
==1643== Invalid read of size 8
==1643==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1643==    by 0x401C22: main (test-input.c:81)
==1643==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1643== 
==1643== 
==1643== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1643==  Access not within mapped region at address 0x8
==1643==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1643==    by 0x401C22: main (test-input.c:81)
==1643==  If you believe this happened as a result of a stack
==1643==  overflow in your program's main thread (unlikely but
==1643==  possible), you can try to increase the size of the
==1643==  main thread stack using the --main-stacksize= flag.
==1643==  The main thread stack size used in this run was 8388608.
==1643== 
==1643== HEAP SUMMARY:
==1643==     in use at exit: 1,480 bytes in 62 blocks
==1643==   total heap usage: 115 allocs, 53 frees, 16,112 bytes allocated
==1643== 
==1643== LEAK SUMMARY:
==1643==    definitely lost: 728 bytes in 7 blocks
==1643==    indirectly lost: 224 bytes in 28 blocks
==1643==      possibly lost: 168 bytes in 1 blocks
==1643==    still reachable: 360 bytes in 26 blocks
==1643==         suppressed: 0 bytes in 0 blocks
==1643== Rerun with --leak-check=full to see details of leaked memory
==1643== 
==1643== For counts of detected and suppressed errors, rerun with: -v
==1643== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1649== Memcheck, a memory error detector
==1649== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1649== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1649== Command: ./tester i1 i2
==1649== Parent PID: 1648
==1649== 
==1649== Invalid read of size 8
==1649==    at 0x400D65: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x400C7D: read_input (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x401B48: main (test-input.c:69)
==1649==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==1649== 
==1649== 
==1649== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1649==  Access not within mapped region at address 0x18
==1649==    at 0x400D65: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x400C7D: read_input (in /graderhome/work/c4prj2_input/tester)
==1649==    by 0x401B48: main (test-input.c:69)
==1649==  If you believe this happened as a result of a stack
==1649==  overflow in your program's main thread (unlikely but
==1649==  possible), you can try to increase the size of the
==1649==  main thread stack using the --main-stacksize= flag.
==1649==  The main thread stack size used in this run was 8388608.
==1649== 
==1649== HEAP SUMMARY:
==1649==     in use at exit: 2,048 bytes in 44 blocks
==1649==   total heap usage: 78 allocs, 34 frees, 6,968 bytes allocated
==1649== 
==1649== LEAK SUMMARY:
==1649==    definitely lost: 936 bytes in 8 blocks
==1649==    indirectly lost: 232 bytes in 29 blocks
==1649==      possibly lost: 0 bytes in 0 blocks
==1649==    still reachable: 880 bytes in 7 blocks
==1649==         suppressed: 0 bytes in 0 blocks
==1649== Rerun with --leak-check=full to see details of leaked memory
==1649== 
==1649== For counts of detected and suppressed errors, rerun with: -v
==1649== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
