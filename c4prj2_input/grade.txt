Grading at Wed Mar 10 16:04:37 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1144== Memcheck, a memory error detector
==1144== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1144== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1144== Command: ./tester hands.txt draw.txt
==1144== Parent PID: 1143
==1144== 
==1144== Invalid read of size 8
==1144==    at 0x401032: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1144==    by 0x401CA4: main (test-input.c:81)
==1144==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1144== 
==1144== 
==1144== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1144==  Access not within mapped region at address 0x8
==1144==    at 0x401032: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1144==    by 0x401CA4: main (test-input.c:81)
==1144==  If you believe this happened as a result of a stack
==1144==  overflow in your program's main thread (unlikely but
==1144==  possible), you can try to increase the size of the
==1144==  main thread stack using the --main-stacksize= flag.
==1144==  The main thread stack size used in this run was 8388608.
==1144== 
==1144== HEAP SUMMARY:
==1144==     in use at exit: 160 bytes in 13 blocks
==1144==   total heap usage: 27 allocs, 14 frees, 13,976 bytes allocated
==1144== 
==1144== LEAK SUMMARY:
==1144==    definitely lost: 56 bytes in 1 blocks
==1144==    indirectly lost: 56 bytes in 7 blocks
==1144==      possibly lost: 0 bytes in 0 blocks
==1144==    still reachable: 48 bytes in 5 blocks
==1144==         suppressed: 0 bytes in 0 blocks
==1144== Rerun with --leak-check=full to see details of leaked memory
==1144== 
==1144== For counts of detected and suppressed errors, rerun with: -v
==1144== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1149== Memcheck, a memory error detector
==1149== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1149== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1149== Command: ./tester hands.txt draw.txt
==1149== Parent PID: 1148
==1149== 
==1149== Invalid read of size 8
==1149==    at 0x401032: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1149==    by 0x401CA4: main (test-input.c:81)
==1149==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1149== 
==1149== 
==1149== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1149==  Access not within mapped region at address 0x8
==1149==    at 0x401032: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1149==    by 0x401CA4: main (test-input.c:81)
==1149==  If you believe this happened as a result of a stack
==1149==  overflow in your program's main thread (unlikely but
==1149==  possible), you can try to increase the size of the
==1149==  main thread stack using the --main-stacksize= flag.
==1149==  The main thread stack size used in this run was 8388608.
==1149== 
==1149== HEAP SUMMARY:
==1149==     in use at exit: 520 bytes in 37 blocks
==1149==   total heap usage: 75 allocs, 38 frees, 14,936 bytes allocated
==1149== 
==1149== LEAK SUMMARY:
==1149==    definitely lost: 224 bytes in 4 blocks
==1149==    indirectly lost: 224 bytes in 28 blocks
==1149==      possibly lost: 0 bytes in 0 blocks
==1149==    still reachable: 72 bytes in 5 blocks
==1149==         suppressed: 0 bytes in 0 blocks
==1149== Rerun with --leak-check=full to see details of leaked memory
==1149== 
==1149== For counts of detected and suppressed errors, rerun with: -v
==1149== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1155== Memcheck, a memory error detector
==1155== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1155== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1155== Command: ./tester h.txt d.txt
==1155== Parent PID: 1154
==1155== 
==1155== Invalid read of size 8
==1155==    at 0x401053: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1155==    by 0x401CA4: main (test-input.c:81)
==1155==  Address 0x52084d0 is 16 bytes after a block of size 32 alloc'd
==1155==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x401141: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1155==    by 0x401957: simple_hand_from_string (test-input.c:16)
==1155==    by 0x4019C1: simple_read_input (test-input.c:32)
==1155==    by 0x401C4C: main (test-input.c:77)
==1155== 
==1155== Invalid read of size 4
==1155==    at 0x40108E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1155==    by 0x401CA4: main (test-input.c:81)
==1155==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1155== 
==1155== 
==1155== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1155==  Access not within mapped region at address 0x0
==1155==    at 0x40108E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1155==    by 0x401CA4: main (test-input.c:81)
==1155==  If you believe this happened as a result of a stack
==1155==  overflow in your program's main thread (unlikely but
==1155==  possible), you can try to increase the size of the
==1155==  main thread stack using the --main-stacksize= flag.
==1155==  The main thread stack size used in this run was 8388608.
==1155== 
==1155== HEAP SUMMARY:
==1155==     in use at exit: 976 bytes in 60 blocks
==1155==   total heap usage: 122 allocs, 62 frees, 16,016 bytes allocated
==1155== 
==1155== LEAK SUMMARY:
==1155==    definitely lost: 224 bytes in 4 blocks
==1155==    indirectly lost: 192 bytes in 24 blocks
==1155==      possibly lost: 0 bytes in 0 blocks
==1155==    still reachable: 560 bytes in 32 blocks
==1155==         suppressed: 0 bytes in 0 blocks
==1155== Rerun with --leak-check=full to see details of leaked memory
==1155== 
==1155== For counts of detected and suppressed errors, rerun with: -v
==1155== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1161== Memcheck, a memory error detector
==1161== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1161== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1161== Command: ./tester i1 i2
==1161== Parent PID: 1160
==1161== 
==1161== Invalid read of size 8
==1161==    at 0x401032: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401CA4: main (test-input.c:81)
==1161==  Address 0x5205d78 is 8 bytes after a block of size 112 alloc'd
==1161==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1161==    by 0x400E87: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x400BE7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x400D0E: read_input (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401BCA: main (test-input.c:69)
==1161== 
==1161== Invalid read of size 8
==1161==    at 0x4010E1: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401CA4: main (test-input.c:81)
==1161==  Address 0x5205d88 is 24 bytes after a block of size 112 in arena "client"
==1161== 
==1161== Invalid read of size 8
==1161==    at 0x401077: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401CA4: main (test-input.c:81)
==1161==  Address 0x5205d80 is 16 bytes after a block of size 112 alloc'd
==1161==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1161==    by 0x400E87: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x400BE7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x400D0E: read_input (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401BCA: main (test-input.c:69)
==1161== 
==1161== Invalid read of size 8
==1161==    at 0x401087: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401CA4: main (test-input.c:81)
==1161==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1161== 
==1161== 
==1161== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1161==  Access not within mapped region at address 0x0
==1161==    at 0x401087: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1161==    by 0x401CA4: main (test-input.c:81)
==1161==  If you believe this happened as a result of a stack
==1161==  overflow in your program's main thread (unlikely but
==1161==  possible), you can try to increase the size of the
==1161==  main thread stack using the --main-stacksize= flag.
==1161==  The main thread stack size used in this run was 8388608.
==1161== 
==1161== HEAP SUMMARY:
==1161==     in use at exit: 2,376 bytes in 143 blocks
==1161==   total heap usage: 297 allocs, 154 frees, 21,376 bytes allocated
==1161== 
==1161== LEAK SUMMARY:
==1161==    definitely lost: 344 bytes in 6 blocks
==1161==    indirectly lost: 112 bytes in 14 blocks
==1161==      possibly lost: 0 bytes in 0 blocks
==1161==    still reachable: 1,920 bytes in 123 blocks
==1161==         suppressed: 0 bytes in 0 blocks
==1161== Rerun with --leak-check=full to see details of leaked memory
==1161== 
==1161== For counts of detected and suppressed errors, rerun with: -v
==1161== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 0 from 0)

Overall Grade: F
