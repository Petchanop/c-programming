Grading at Wed Mar 10 09:53:09 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1343== Memcheck, a memory error detector
==1343== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1343== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1343== Command: ./tester hands.txt draw.txt
==1343== Parent PID: 1342
==1343== 
==1343== Invalid read of size 8
==1343==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1343==    by 0x401C22: main (test-input.c:81)
==1343==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1343== 
==1343== 
==1343== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1343==  Access not within mapped region at address 0x8
==1343==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1343==    by 0x401C22: main (test-input.c:81)
==1343==  If you believe this happened as a result of a stack
==1343==  overflow in your program's main thread (unlikely but
==1343==  possible), you can try to increase the size of the
==1343==  main thread stack using the --main-stacksize= flag.
==1343==  The main thread stack size used in this run was 8388608.
==1343== 
==1343== HEAP SUMMARY:
==1343==     in use at exit: 328 bytes in 14 blocks
==1343==   total heap usage: 28 allocs, 14 frees, 14,144 bytes allocated
==1343== 
==1343== LEAK SUMMARY:
==1343==    definitely lost: 56 bytes in 1 blocks
==1343==    indirectly lost: 56 bytes in 7 blocks
==1343==      possibly lost: 168 bytes in 1 blocks
==1343==    still reachable: 48 bytes in 5 blocks
==1343==         suppressed: 0 bytes in 0 blocks
==1343== Rerun with --leak-check=full to see details of leaked memory
==1343== 
==1343== For counts of detected and suppressed errors, rerun with: -v
==1343== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1348== Memcheck, a memory error detector
==1348== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1348== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1348== Command: ./tester hands.txt draw.txt
==1348== Parent PID: 1347
==1348== 
==1348== Invalid read of size 8
==1348==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1348==    by 0x401C22: main (test-input.c:81)
==1348==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1348== 
==1348== 
==1348== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1348==  Access not within mapped region at address 0x8
==1348==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1348==    by 0x401C22: main (test-input.c:81)
==1348==  If you believe this happened as a result of a stack
==1348==  overflow in your program's main thread (unlikely but
==1348==  possible), you can try to increase the size of the
==1348==  main thread stack using the --main-stacksize= flag.
==1348==  The main thread stack size used in this run was 8388608.
==1348== 
==1348== HEAP SUMMARY:
==1348==     in use at exit: 1,168 bytes in 41 blocks
==1348==   total heap usage: 79 allocs, 38 frees, 15,560 bytes allocated
==1348== 
==1348== LEAK SUMMARY:
==1348==    definitely lost: 728 bytes in 7 blocks
==1348==    indirectly lost: 224 bytes in 28 blocks
==1348==      possibly lost: 168 bytes in 1 blocks
==1348==    still reachable: 48 bytes in 5 blocks
==1348==         suppressed: 0 bytes in 0 blocks
==1348== Rerun with --leak-check=full to see details of leaked memory
==1348== 
==1348== For counts of detected and suppressed errors, rerun with: -v
==1348== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1354== Memcheck, a memory error detector
==1354== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1354== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1354== Command: ./tester h.txt d.txt
==1354== Parent PID: 1353
==1354== 
==1354== Invalid read of size 8
==1354==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1354==    by 0x401C22: main (test-input.c:81)
==1354==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1354== 
==1354== 
==1354== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1354==  Access not within mapped region at address 0x8
==1354==    at 0x40105F: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==1354==    by 0x401C22: main (test-input.c:81)
==1354==  If you believe this happened as a result of a stack
==1354==  overflow in your program's main thread (unlikely but
==1354==  possible), you can try to increase the size of the
==1354==  main thread stack using the --main-stacksize= flag.
==1354==  The main thread stack size used in this run was 8388608.
==1354== 
==1354== HEAP SUMMARY:
==1354==     in use at exit: 1,480 bytes in 62 blocks
==1354==   total heap usage: 115 allocs, 53 frees, 16,112 bytes allocated
==1354== 
==1354== LEAK SUMMARY:
==1354==    definitely lost: 728 bytes in 7 blocks
==1354==    indirectly lost: 224 bytes in 28 blocks
==1354==      possibly lost: 168 bytes in 1 blocks
==1354==    still reachable: 360 bytes in 26 blocks
==1354==         suppressed: 0 bytes in 0 blocks
==1354== Rerun with --leak-check=full to see details of leaked memory
==1354== 
==1354== For counts of detected and suppressed errors, rerun with: -v
==1354== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1360== Memcheck, a memory error detector
==1360== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1360== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1360== Command: ./tester i1 i2
==1360== Parent PID: 1359
==1360== 
==1360== Invalid read of size 8
==1360==    at 0x400D65: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x400C7D: read_input (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x401B48: main (test-input.c:69)
==1360==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==1360== 
==1360== 
==1360== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1360==  Access not within mapped region at address 0x18
==1360==    at 0x400D65: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x400BB8: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x400C7D: read_input (in /graderhome/work/c4prj2_input/tester)
==1360==    by 0x401B48: main (test-input.c:69)
==1360==  If you believe this happened as a result of a stack
==1360==  overflow in your program's main thread (unlikely but
==1360==  possible), you can try to increase the size of the
==1360==  main thread stack using the --main-stacksize= flag.
==1360==  The main thread stack size used in this run was 8388608.
==1360== 
==1360== HEAP SUMMARY:
==1360==     in use at exit: 2,048 bytes in 44 blocks
==1360==   total heap usage: 78 allocs, 34 frees, 6,968 bytes allocated
==1360== 
==1360== LEAK SUMMARY:
==1360==    definitely lost: 936 bytes in 8 blocks
==1360==    indirectly lost: 232 bytes in 29 blocks
==1360==      possibly lost: 0 bytes in 0 blocks
==1360==    still reachable: 880 bytes in 7 blocks
==1360==         suppressed: 0 bytes in 0 blocks
==1360== Rerun with --leak-check=full to see details of leaked memory
==1360== 
==1360== For counts of detected and suppressed errors, rerun with: -v
==1360== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
