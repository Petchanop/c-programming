Grading at Tue Mar  9 10:13:42 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1760== Memcheck, a memory error detector
==1760== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1760== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1760== Command: ./tester hands.txt draw.txt
==1760== Parent PID: 1759
==1760== 
==1760== Invalid free() / delete / delete[] / realloc()
==1760==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1760==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x4018F5: main (test-input.c:69)
==1760==  Address 0xfff000a70 is on thread 1's stack
==1760==  in frame #3, created by main (test-input.c:57)
==1760== 
==1760== Invalid write of size 8
==1760==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x4018F5: main (test-input.c:69)
==1760==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1760== 
==1760== 
==1760== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1760==  Access not within mapped region at address 0x0
==1760==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1760==    by 0x4018F5: main (test-input.c:69)
==1760==  If you believe this happened as a result of a stack
==1760==  overflow in your program's main thread (unlikely but
==1760==  possible), you can try to increase the size of the
==1760==  main thread stack using the --main-stacksize= flag.
==1760==  The main thread stack size used in this run was 8388608.
==1760== 
==1760== HEAP SUMMARY:
==1760==     in use at exit: 872 bytes in 7 blocks
==1760==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1760== 
==1760== LEAK SUMMARY:
==1760==    definitely lost: 0 bytes in 0 blocks
==1760==    indirectly lost: 0 bytes in 0 blocks
==1760==      possibly lost: 0 bytes in 0 blocks
==1760==    still reachable: 872 bytes in 7 blocks
==1760==         suppressed: 0 bytes in 0 blocks
==1760== Rerun with --leak-check=full to see details of leaked memory
==1760== 
==1760== For counts of detected and suppressed errors, rerun with: -v
==1760== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1765== Memcheck, a memory error detector
==1765== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1765== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1765== Command: ./tester hands.txt draw.txt
==1765== Parent PID: 1764
==1765== 
==1765== Invalid free() / delete / delete[] / realloc()
==1765==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1765==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x4018F5: main (test-input.c:69)
==1765==  Address 0xfff000a70 is on thread 1's stack
==1765==  in frame #3, created by main (test-input.c:57)
==1765== 
==1765== Invalid write of size 8
==1765==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x4018F5: main (test-input.c:69)
==1765==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1765== 
==1765== 
==1765== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1765==  Access not within mapped region at address 0x0
==1765==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1765==    by 0x4018F5: main (test-input.c:69)
==1765==  If you believe this happened as a result of a stack
==1765==  overflow in your program's main thread (unlikely but
==1765==  possible), you can try to increase the size of the
==1765==  main thread stack using the --main-stacksize= flag.
==1765==  The main thread stack size used in this run was 8388608.
==1765== 
==1765== HEAP SUMMARY:
==1765==     in use at exit: 872 bytes in 7 blocks
==1765==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1765== 
==1765== LEAK SUMMARY:
==1765==    definitely lost: 0 bytes in 0 blocks
==1765==    indirectly lost: 0 bytes in 0 blocks
==1765==      possibly lost: 0 bytes in 0 blocks
==1765==    still reachable: 872 bytes in 7 blocks
==1765==         suppressed: 0 bytes in 0 blocks
==1765== Rerun with --leak-check=full to see details of leaked memory
==1765== 
==1765== For counts of detected and suppressed errors, rerun with: -v
==1765== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1771== Memcheck, a memory error detector
==1771== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1771== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1771== Command: ./tester h.txt d.txt
==1771== Parent PID: 1770
==1771== 
==1771== Invalid free() / delete / delete[] / realloc()
==1771==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1771==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x4018F5: main (test-input.c:69)
==1771==  Address 0xfff000a70 is on thread 1's stack
==1771==  in frame #3, created by main (test-input.c:57)
==1771== 
==1771== Invalid write of size 8
==1771==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x4018F5: main (test-input.c:69)
==1771==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1771== 
==1771== 
==1771== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1771==  Access not within mapped region at address 0x0
==1771==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1771==    by 0x4018F5: main (test-input.c:69)
==1771==  If you believe this happened as a result of a stack
==1771==  overflow in your program's main thread (unlikely but
==1771==  possible), you can try to increase the size of the
==1771==  main thread stack using the --main-stacksize= flag.
==1771==  The main thread stack size used in this run was 8388608.
==1771== 
==1771== HEAP SUMMARY:
==1771==     in use at exit: 872 bytes in 7 blocks
==1771==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1771== 
==1771== LEAK SUMMARY:
==1771==    definitely lost: 0 bytes in 0 blocks
==1771==    indirectly lost: 0 bytes in 0 blocks
==1771==      possibly lost: 0 bytes in 0 blocks
==1771==    still reachable: 872 bytes in 7 blocks
==1771==         suppressed: 0 bytes in 0 blocks
==1771== Rerun with --leak-check=full to see details of leaked memory
==1771== 
==1771== For counts of detected and suppressed errors, rerun with: -v
==1771== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1777== Memcheck, a memory error detector
==1777== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1777== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1777== Command: ./tester i1 i2
==1777== Parent PID: 1776
==1777== 
==1777== Invalid free() / delete / delete[] / realloc()
==1777==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1777==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x4018F5: main (test-input.c:69)
==1777==  Address 0xfff000a70 is on thread 1's stack
==1777==  in frame #3, created by main (test-input.c:57)
==1777== 
==1777== Invalid write of size 8
==1777==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x4018F5: main (test-input.c:69)
==1777==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1777== 
==1777== 
==1777== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1777==  Access not within mapped region at address 0x0
==1777==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x400CAC: read_input (in /graderhome/work/c4prj2_input/tester)
==1777==    by 0x4018F5: main (test-input.c:69)
==1777==  If you believe this happened as a result of a stack
==1777==  overflow in your program's main thread (unlikely but
==1777==  possible), you can try to increase the size of the
==1777==  main thread stack using the --main-stacksize= flag.
==1777==  The main thread stack size used in this run was 8388608.
==1777== 
==1777== HEAP SUMMARY:
==1777==     in use at exit: 872 bytes in 7 blocks
==1777==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1777== 
==1777== LEAK SUMMARY:
==1777==    definitely lost: 0 bytes in 0 blocks
==1777==    indirectly lost: 0 bytes in 0 blocks
==1777==      possibly lost: 0 bytes in 0 blocks
==1777==    still reachable: 872 bytes in 7 blocks
==1777==         suppressed: 0 bytes in 0 blocks
==1777== Rerun with --leak-check=full to see details of leaked memory
==1777== 
==1777== For counts of detected and suppressed errors, rerun with: -v
==1777== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
