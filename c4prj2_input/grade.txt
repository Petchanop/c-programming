Grading at Wed Mar 10 15:48:24 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==562== Memcheck, a memory error detector
==562== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==562== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==562== Command: ./tester hands.txt draw.txt
==562== Parent PID: 561
==562== 
==562== Invalid read of size 8
==562==    at 0x400C76: read_input (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x401B14: main (test-input.c:69)
==562==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==562==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==562==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==562==    by 0x400C1F: read_input (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x401B14: main (test-input.c:69)
==562== 
==562== Invalid read of size 8
==562==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x401B14: main (test-input.c:69)
==562==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==562== 
==562== 
==562== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==562==  Access not within mapped region at address 0x8
==562==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==562==    by 0x401B14: main (test-input.c:69)
==562==  If you believe this happened as a result of a stack
==562==  overflow in your program's main thread (unlikely but
==562==  possible), you can try to increase the size of the
==562==  main thread stack using the --main-stacksize= flag.
==562==  The main thread stack size used in this run was 8388608.
==562== 
==562== HEAP SUMMARY:
==562==     in use at exit: 960 bytes in 12 blocks
==562==   total heap usage: 20 allocs, 8 frees, 5,240 bytes allocated
==562== 
==562== LEAK SUMMARY:
==562==    definitely lost: 56 bytes in 1 blocks
==562==    indirectly lost: 56 bytes in 7 blocks
==562==      possibly lost: 168 bytes in 1 blocks
==562==    still reachable: 680 bytes in 3 blocks
==562==         suppressed: 0 bytes in 0 blocks
==562== Rerun with --leak-check=full to see details of leaked memory
==562== 
==562== For counts of detected and suppressed errors, rerun with: -v
==562== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==567== Memcheck, a memory error detector
==567== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==567== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==567== Command: ./tester hands.txt draw.txt
==567== Parent PID: 566
==567== 
==567== Invalid read of size 8
==567==    at 0x400C76: read_input (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x401B14: main (test-input.c:69)
==567==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==567==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==567==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==567==    by 0x400C1F: read_input (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x401B14: main (test-input.c:69)
==567== 
==567== Invalid read of size 8
==567==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x401B14: main (test-input.c:69)
==567==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==567== 
==567== 
==567== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==567==  Access not within mapped region at address 0x8
==567==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==567==    by 0x401B14: main (test-input.c:69)
==567==  If you believe this happened as a result of a stack
==567==  overflow in your program's main thread (unlikely but
==567==  possible), you can try to increase the size of the
==567==  main thread stack using the --main-stacksize= flag.
==567==  The main thread stack size used in this run was 8388608.
==567== 
==567== HEAP SUMMARY:
==567==     in use at exit: 960 bytes in 12 blocks
==567==   total heap usage: 20 allocs, 8 frees, 5,240 bytes allocated
==567== 
==567== LEAK SUMMARY:
==567==    definitely lost: 56 bytes in 1 blocks
==567==    indirectly lost: 56 bytes in 7 blocks
==567==      possibly lost: 168 bytes in 1 blocks
==567==    still reachable: 680 bytes in 3 blocks
==567==         suppressed: 0 bytes in 0 blocks
==567== Rerun with --leak-check=full to see details of leaked memory
==567== 
==567== For counts of detected and suppressed errors, rerun with: -v
==567== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==573== Memcheck, a memory error detector
==573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==573== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==573== Command: ./tester h.txt d.txt
==573== Parent PID: 572
==573== 
==573== Invalid read of size 8
==573==    at 0x400C76: read_input (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x401B14: main (test-input.c:69)
==573==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==573==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==573==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==573==    by 0x400C1F: read_input (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x401B14: main (test-input.c:69)
==573== 
==573== Invalid read of size 8
==573==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x401B14: main (test-input.c:69)
==573==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==573== 
==573== 
==573== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==573==  Access not within mapped region at address 0x8
==573==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==573==    by 0x401B14: main (test-input.c:69)
==573==  If you believe this happened as a result of a stack
==573==  overflow in your program's main thread (unlikely but
==573==  possible), you can try to increase the size of the
==573==  main thread stack using the --main-stacksize= flag.
==573==  The main thread stack size used in this run was 8388608.
==573== 
==573== HEAP SUMMARY:
==573==     in use at exit: 960 bytes in 12 blocks
==573==   total heap usage: 20 allocs, 8 frees, 5,240 bytes allocated
==573== 
==573== LEAK SUMMARY:
==573==    definitely lost: 56 bytes in 1 blocks
==573==    indirectly lost: 56 bytes in 7 blocks
==573==      possibly lost: 168 bytes in 1 blocks
==573==    still reachable: 680 bytes in 3 blocks
==573==         suppressed: 0 bytes in 0 blocks
==573== Rerun with --leak-check=full to see details of leaked memory
==573== 
==573== For counts of detected and suppressed errors, rerun with: -v
==573== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==579== Memcheck, a memory error detector
==579== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==579== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==579== Command: ./tester i1 i2
==579== Parent PID: 578
==579== 
==579== Invalid read of size 8
==579==    at 0x400C76: read_input (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x401B14: main (test-input.c:69)
==579==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==579==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==579==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==579==    by 0x400C1F: read_input (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x401B14: main (test-input.c:69)
==579== 
==579== Invalid read of size 8
==579==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x401B14: main (test-input.c:69)
==579==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==579== 
==579== 
==579== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==579==  Access not within mapped region at address 0x8
==579==    at 0x40132F: print_hand (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x400C80: read_input (in /graderhome/work/c4prj2_input/tester)
==579==    by 0x401B14: main (test-input.c:69)
==579==  If you believe this happened as a result of a stack
==579==  overflow in your program's main thread (unlikely but
==579==  possible), you can try to increase the size of the
==579==  main thread stack using the --main-stacksize= flag.
==579==  The main thread stack size used in this run was 8388608.
==579== 
==579== HEAP SUMMARY:
==579==     in use at exit: 960 bytes in 12 blocks
==579==   total heap usage: 20 allocs, 8 frees, 5,240 bytes allocated
==579== 
==579== LEAK SUMMARY:
==579==    definitely lost: 56 bytes in 1 blocks
==579==    indirectly lost: 56 bytes in 7 blocks
==579==      possibly lost: 168 bytes in 1 blocks
==579==    still reachable: 680 bytes in 3 blocks
==579==         suppressed: 0 bytes in 0 blocks
==579== Rerun with --leak-check=full to see details of leaked memory
==579== 
==579== For counts of detected and suppressed errors, rerun with: -v
==579== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
