Grading at Tue Mar  9 10:05:14 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1593== Memcheck, a memory error detector
==1593== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1593== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1593== Command: ./tester hands.txt draw.txt
==1593== Parent PID: 1592
==1593== 
==1593== Invalid free() / delete / delete[] / realloc()
==1593==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1593==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x4018E9: main (test-input.c:69)
==1593==  Address 0xfff000a70 is on thread 1's stack
==1593==  in frame #3, created by main (test-input.c:57)
==1593== 
==1593== Invalid write of size 8
==1593==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x4018E9: main (test-input.c:69)
==1593==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1593== 
==1593== 
==1593== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1593==  Access not within mapped region at address 0x0
==1593==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1593==    by 0x4018E9: main (test-input.c:69)
==1593==  If you believe this happened as a result of a stack
==1593==  overflow in your program's main thread (unlikely but
==1593==  possible), you can try to increase the size of the
==1593==  main thread stack using the --main-stacksize= flag.
==1593==  The main thread stack size used in this run was 8388608.
==1593== 
==1593== HEAP SUMMARY:
==1593==     in use at exit: 872 bytes in 7 blocks
==1593==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1593== 
==1593== LEAK SUMMARY:
==1593==    definitely lost: 0 bytes in 0 blocks
==1593==    indirectly lost: 0 bytes in 0 blocks
==1593==      possibly lost: 0 bytes in 0 blocks
==1593==    still reachable: 872 bytes in 7 blocks
==1593==         suppressed: 0 bytes in 0 blocks
==1593== Rerun with --leak-check=full to see details of leaked memory
==1593== 
==1593== For counts of detected and suppressed errors, rerun with: -v
==1593== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1598== Memcheck, a memory error detector
==1598== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1598== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1598== Command: ./tester hands.txt draw.txt
==1598== Parent PID: 1597
==1598== 
==1598== Invalid free() / delete / delete[] / realloc()
==1598==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1598==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x4018E9: main (test-input.c:69)
==1598==  Address 0xfff000a70 is on thread 1's stack
==1598==  in frame #3, created by main (test-input.c:57)
==1598== 
==1598== Invalid write of size 8
==1598==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x4018E9: main (test-input.c:69)
==1598==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1598== 
==1598== 
==1598== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1598==  Access not within mapped region at address 0x0
==1598==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1598==    by 0x4018E9: main (test-input.c:69)
==1598==  If you believe this happened as a result of a stack
==1598==  overflow in your program's main thread (unlikely but
==1598==  possible), you can try to increase the size of the
==1598==  main thread stack using the --main-stacksize= flag.
==1598==  The main thread stack size used in this run was 8388608.
==1598== 
==1598== HEAP SUMMARY:
==1598==     in use at exit: 872 bytes in 7 blocks
==1598==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1598== 
==1598== LEAK SUMMARY:
==1598==    definitely lost: 0 bytes in 0 blocks
==1598==    indirectly lost: 0 bytes in 0 blocks
==1598==      possibly lost: 0 bytes in 0 blocks
==1598==    still reachable: 872 bytes in 7 blocks
==1598==         suppressed: 0 bytes in 0 blocks
==1598== Rerun with --leak-check=full to see details of leaked memory
==1598== 
==1598== For counts of detected and suppressed errors, rerun with: -v
==1598== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1604== Memcheck, a memory error detector
==1604== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1604== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1604== Command: ./tester h.txt d.txt
==1604== Parent PID: 1603
==1604== 
==1604== Invalid free() / delete / delete[] / realloc()
==1604==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1604==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x4018E9: main (test-input.c:69)
==1604==  Address 0xfff000a70 is on thread 1's stack
==1604==  in frame #3, created by main (test-input.c:57)
==1604== 
==1604== Invalid write of size 8
==1604==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x4018E9: main (test-input.c:69)
==1604==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1604== 
==1604== 
==1604== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1604==  Access not within mapped region at address 0x0
==1604==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1604==    by 0x4018E9: main (test-input.c:69)
==1604==  If you believe this happened as a result of a stack
==1604==  overflow in your program's main thread (unlikely but
==1604==  possible), you can try to increase the size of the
==1604==  main thread stack using the --main-stacksize= flag.
==1604==  The main thread stack size used in this run was 8388608.
==1604== 
==1604== HEAP SUMMARY:
==1604==     in use at exit: 872 bytes in 7 blocks
==1604==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1604== 
==1604== LEAK SUMMARY:
==1604==    definitely lost: 0 bytes in 0 blocks
==1604==    indirectly lost: 0 bytes in 0 blocks
==1604==      possibly lost: 0 bytes in 0 blocks
==1604==    still reachable: 872 bytes in 7 blocks
==1604==         suppressed: 0 bytes in 0 blocks
==1604== Rerun with --leak-check=full to see details of leaked memory
==1604== 
==1604== For counts of detected and suppressed errors, rerun with: -v
==1604== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1610== Memcheck, a memory error detector
==1610== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1610== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1610== Command: ./tester i1 i2
==1610== Parent PID: 1609
==1610== 
==1610== Invalid free() / delete / delete[] / realloc()
==1610==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1610==    by 0x400B1C: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x4018E9: main (test-input.c:69)
==1610==  Address 0xfff000a70 is on thread 1's stack
==1610==  in frame #3, created by main (test-input.c:57)
==1610== 
==1610== Invalid write of size 8
==1610==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x4018E9: main (test-input.c:69)
==1610==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1610== 
==1610== 
==1610== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1610==  Access not within mapped region at address 0x0
==1610==    at 0x400BBA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x400CA0: read_input (in /graderhome/work/c4prj2_input/tester)
==1610==    by 0x4018E9: main (test-input.c:69)
==1610==  If you believe this happened as a result of a stack
==1610==  overflow in your program's main thread (unlikely but
==1610==  possible), you can try to increase the size of the
==1610==  main thread stack using the --main-stacksize= flag.
==1610==  The main thread stack size used in this run was 8388608.
==1610== 
==1610== HEAP SUMMARY:
==1610==     in use at exit: 872 bytes in 7 blocks
==1610==   total heap usage: 9 allocs, 2 frees, 4,984 bytes allocated
==1610== 
==1610== LEAK SUMMARY:
==1610==    definitely lost: 0 bytes in 0 blocks
==1610==    indirectly lost: 0 bytes in 0 blocks
==1610==      possibly lost: 0 bytes in 0 blocks
==1610==    still reachable: 872 bytes in 7 blocks
==1610==         suppressed: 0 bytes in 0 blocks
==1610== Rerun with --leak-check=full to see details of leaked memory
==1610== 
==1610== For counts of detected and suppressed errors, rerun with: -v
==1610== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
