Grading at Wed Mar 10 15:59:07 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==977== Memcheck, a memory error detector
==977== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==977== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==977== Command: ./tester hands.txt draw.txt
==977== Parent PID: 976
==977== 
==977== Invalid read of size 8
==977==    at 0x400D51: read_input (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x401BEF: main (test-input.c:69)
==977==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==977==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==977==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==977==    by 0x400CFA: read_input (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x401BEF: main (test-input.c:69)
==977== 
==977== Invalid read of size 8
==977==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x401BEF: main (test-input.c:69)
==977==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==977== 
==977== 
==977== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==977==  Access not within mapped region at address 0x8
==977==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==977==    by 0x401BEF: main (test-input.c:69)
==977==  If you believe this happened as a result of a stack
==977==  overflow in your program's main thread (unlikely but
==977==  possible), you can try to increase the size of the
==977==  main thread stack using the --main-stacksize= flag.
==977==  The main thread stack size used in this run was 8388608.
==977== 
==977== HEAP SUMMARY:
==977==     in use at exit: 792 bytes in 11 blocks
==977==   total heap usage: 19 allocs, 8 frees, 5,072 bytes allocated
==977== 
==977== LEAK SUMMARY:
==977==    definitely lost: 56 bytes in 1 blocks
==977==    indirectly lost: 56 bytes in 7 blocks
==977==      possibly lost: 0 bytes in 0 blocks
==977==    still reachable: 680 bytes in 3 blocks
==977==         suppressed: 0 bytes in 0 blocks
==977== Rerun with --leak-check=full to see details of leaked memory
==977== 
==977== For counts of detected and suppressed errors, rerun with: -v
==977== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==982== Memcheck, a memory error detector
==982== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==982== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==982== Command: ./tester hands.txt draw.txt
==982== Parent PID: 981
==982== 
==982== Invalid read of size 8
==982==    at 0x400D51: read_input (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x401BEF: main (test-input.c:69)
==982==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==982==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==982==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==982==    by 0x400CFA: read_input (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x401BEF: main (test-input.c:69)
==982== 
==982== Invalid read of size 8
==982==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x401BEF: main (test-input.c:69)
==982==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==982== 
==982== 
==982== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==982==  Access not within mapped region at address 0x8
==982==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==982==    by 0x401BEF: main (test-input.c:69)
==982==  If you believe this happened as a result of a stack
==982==  overflow in your program's main thread (unlikely but
==982==  possible), you can try to increase the size of the
==982==  main thread stack using the --main-stacksize= flag.
==982==  The main thread stack size used in this run was 8388608.
==982== 
==982== HEAP SUMMARY:
==982==     in use at exit: 792 bytes in 11 blocks
==982==   total heap usage: 19 allocs, 8 frees, 5,072 bytes allocated
==982== 
==982== LEAK SUMMARY:
==982==    definitely lost: 56 bytes in 1 blocks
==982==    indirectly lost: 56 bytes in 7 blocks
==982==      possibly lost: 0 bytes in 0 blocks
==982==    still reachable: 680 bytes in 3 blocks
==982==         suppressed: 0 bytes in 0 blocks
==982== Rerun with --leak-check=full to see details of leaked memory
==982== 
==982== For counts of detected and suppressed errors, rerun with: -v
==982== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==988== Memcheck, a memory error detector
==988== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==988== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==988== Command: ./tester h.txt d.txt
==988== Parent PID: 987
==988== 
==988== Invalid read of size 8
==988==    at 0x400D51: read_input (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x401BEF: main (test-input.c:69)
==988==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==988==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==988==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==988==    by 0x400CFA: read_input (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x401BEF: main (test-input.c:69)
==988== 
==988== Invalid read of size 8
==988==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x401BEF: main (test-input.c:69)
==988==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==988== 
==988== 
==988== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==988==  Access not within mapped region at address 0x8
==988==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==988==    by 0x401BEF: main (test-input.c:69)
==988==  If you believe this happened as a result of a stack
==988==  overflow in your program's main thread (unlikely but
==988==  possible), you can try to increase the size of the
==988==  main thread stack using the --main-stacksize= flag.
==988==  The main thread stack size used in this run was 8388608.
==988== 
==988== HEAP SUMMARY:
==988==     in use at exit: 912 bytes in 13 blocks
==988==   total heap usage: 27 allocs, 14 frees, 5,528 bytes allocated
==988== 
==988== LEAK SUMMARY:
==988==    definitely lost: 56 bytes in 1 blocks
==988==    indirectly lost: 48 bytes in 6 blocks
==988==      possibly lost: 0 bytes in 0 blocks
==988==    still reachable: 808 bytes in 6 blocks
==988==         suppressed: 0 bytes in 0 blocks
==988== Rerun with --leak-check=full to see details of leaked memory
==988== 
==988== For counts of detected and suppressed errors, rerun with: -v
==988== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==994== Memcheck, a memory error detector
==994== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==994== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==994== Command: ./tester i1 i2
==994== Parent PID: 993
==994== 
==994== Invalid read of size 8
==994==    at 0x400D51: read_input (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x401BEF: main (test-input.c:69)
==994==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==994==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==994==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==994==    by 0x400CFA: read_input (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x401BEF: main (test-input.c:69)
==994== 
==994== Invalid read of size 8
==994==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x401BEF: main (test-input.c:69)
==994==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==994== 
==994== 
==994== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==994==  Access not within mapped region at address 0x8
==994==    at 0x40140A: print_hand (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x400D5B: read_input (in /graderhome/work/c4prj2_input/tester)
==994==    by 0x401BEF: main (test-input.c:69)
==994==  If you believe this happened as a result of a stack
==994==  overflow in your program's main thread (unlikely but
==994==  possible), you can try to increase the size of the
==994==  main thread stack using the --main-stacksize= flag.
==994==  The main thread stack size used in this run was 8388608.
==994== 
==994== HEAP SUMMARY:
==994==     in use at exit: 936 bytes in 16 blocks
==994==   total heap usage: 30 allocs, 14 frees, 5,552 bytes allocated
==994== 
==994== LEAK SUMMARY:
==994==    definitely lost: 56 bytes in 1 blocks
==994==    indirectly lost: 24 bytes in 3 blocks
==994==      possibly lost: 0 bytes in 0 blocks
==994==    still reachable: 856 bytes in 12 blocks
==994==         suppressed: 0 bytes in 0 blocks
==994== Rerun with --leak-check=full to see details of leaked memory
==994== 
==994== For counts of detected and suppressed errors, rerun with: -v
==994== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
