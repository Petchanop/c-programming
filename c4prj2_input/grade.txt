Grading at Wed Mar 10 10:18:32 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==2634== Memcheck, a memory error detector
==2634== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2634== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2634== Command: ./tester hands.txt draw.txt
==2634== Parent PID: 2633
==2634== 
==2634== Invalid read of size 8
==2634==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x401B76: main (test-input.c:69)
==2634==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2634== 
==2634== 
==2634== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2634==  Access not within mapped region at address 0x8
==2634==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2634==    by 0x401B76: main (test-input.c:69)
==2634==  If you believe this happened as a result of a stack
==2634==  overflow in your program's main thread (unlikely but
==2634==  possible), you can try to increase the size of the
==2634==  main thread stack using the --main-stacksize= flag.
==2634==  The main thread stack size used in this run was 8388608.
==2634== 
==2634== HEAP SUMMARY:
==2634==     in use at exit: 960 bytes in 12 blocks
==2634==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2634== 
==2634== LEAK SUMMARY:
==2634==    definitely lost: 56 bytes in 1 blocks
==2634==    indirectly lost: 56 bytes in 7 blocks
==2634==      possibly lost: 0 bytes in 0 blocks
==2634==    still reachable: 848 bytes in 4 blocks
==2634==         suppressed: 0 bytes in 0 blocks
==2634== Rerun with --leak-check=full to see details of leaked memory
==2634== 
==2634== For counts of detected and suppressed errors, rerun with: -v
==2634== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==2639== Memcheck, a memory error detector
==2639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2639== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2639== Command: ./tester hands.txt draw.txt
==2639== Parent PID: 2638
==2639== 
==2639== Invalid read of size 8
==2639==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x401B76: main (test-input.c:69)
==2639==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2639== 
==2639== 
==2639== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2639==  Access not within mapped region at address 0x8
==2639==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x400C11: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x400C98: read_input (in /graderhome/work/c4prj2_input/tester)
==2639==    by 0x401B76: main (test-input.c:69)
==2639==  If you believe this happened as a result of a stack
==2639==  overflow in your program's main thread (unlikely but
==2639==  possible), you can try to increase the size of the
==2639==  main thread stack using the --main-stacksize= flag.
==2639==  The main thread stack size used in this run was 8388608.
==2639== 
==2639== HEAP SUMMARY:
==2639==     in use at exit: 960 bytes in 12 blocks
==2639==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==2639== 
==2639== LEAK SUMMARY:
==2639==    definitely lost: 56 bytes in 1 blocks
==2639==    indirectly lost: 56 bytes in 7 blocks
==2639==      possibly lost: 0 bytes in 0 blocks
==2639==    still reachable: 848 bytes in 4 blocks
==2639==         suppressed: 0 bytes in 0 blocks
==2639== Rerun with --leak-check=full to see details of leaked memory
==2639== 
==2639== For counts of detected and suppressed errors, rerun with: -v
==2639== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2645== Memcheck, a memory error detector
==2645== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2645== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2645== Command: ./tester h.txt d.txt
==2645== Parent PID: 2644
==2645== 
==2645== Invalid read of size 8
==2645==    at 0x400CD8: read_input (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x401B76: main (test-input.c:69)
==2645==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==2645==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2645==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2645==    by 0x400C81: read_input (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x401B76: main (test-input.c:69)
==2645== 
==2645== Invalid read of size 8
==2645==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x400CE2: read_input (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x401B76: main (test-input.c:69)
==2645==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2645== 
==2645== 
==2645== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2645==  Access not within mapped region at address 0x8
==2645==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x400CE2: read_input (in /graderhome/work/c4prj2_input/tester)
==2645==    by 0x401B76: main (test-input.c:69)
==2645==  If you believe this happened as a result of a stack
==2645==  overflow in your program's main thread (unlikely but
==2645==  possible), you can try to increase the size of the
==2645==  main thread stack using the --main-stacksize= flag.
==2645==  The main thread stack size used in this run was 8388608.
==2645== 
==2645== HEAP SUMMARY:
==2645==     in use at exit: 1,096 bytes in 14 blocks
==2645==   total heap usage: 30 allocs, 16 frees, 9,920 bytes allocated
==2645== 
==2645== LEAK SUMMARY:
==2645==    definitely lost: 56 bytes in 1 blocks
==2645==    indirectly lost: 48 bytes in 6 blocks
==2645==      possibly lost: 168 bytes in 1 blocks
==2645==    still reachable: 824 bytes in 6 blocks
==2645==         suppressed: 0 bytes in 0 blocks
==2645== Rerun with --leak-check=full to see details of leaked memory
==2645== 
==2645== For counts of detected and suppressed errors, rerun with: -v
==2645== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2651== Memcheck, a memory error detector
==2651== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2651== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2651== Command: ./tester i1 i2
==2651== Parent PID: 2650
==2651== 
==2651== Invalid read of size 8
==2651==    at 0x400CD8: read_input (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x401B76: main (test-input.c:69)
==2651==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==2651==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2651==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2651==    by 0x400C81: read_input (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x401B76: main (test-input.c:69)
==2651== 
==2651== Invalid read of size 8
==2651==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x400CE2: read_input (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x401B76: main (test-input.c:69)
==2651==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2651== 
==2651== 
==2651== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2651==  Access not within mapped region at address 0x8
==2651==    at 0x401391: print_hand (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x400CE2: read_input (in /graderhome/work/c4prj2_input/tester)
==2651==    by 0x401B76: main (test-input.c:69)
==2651==  If you believe this happened as a result of a stack
==2651==  overflow in your program's main thread (unlikely but
==2651==  possible), you can try to increase the size of the
==2651==  main thread stack using the --main-stacksize= flag.
==2651==  The main thread stack size used in this run was 8388608.
==2651== 
==2651== HEAP SUMMARY:
==2651==     in use at exit: 1,120 bytes in 17 blocks
==2651==   total heap usage: 33 allocs, 16 frees, 9,944 bytes allocated
==2651== 
==2651== LEAK SUMMARY:
==2651==    definitely lost: 56 bytes in 1 blocks
==2651==    indirectly lost: 24 bytes in 3 blocks
==2651==      possibly lost: 168 bytes in 1 blocks
==2651==    still reachable: 872 bytes in 12 blocks
==2651==         suppressed: 0 bytes in 0 blocks
==2651== Rerun with --leak-check=full to see details of leaked memory
==2651== 
==2651== For counts of detected and suppressed errors, rerun with: -v
==2651== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
