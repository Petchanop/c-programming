Grading at Wed Mar 10 15:27:51 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==402== Memcheck, a memory error detector
==402== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==402== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==402== Command: ./tester hands.txt draw.txt
==402== Parent PID: 401
==402== 
==402== Invalid read of size 8
==402==    at 0x400CDE: read_input (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x401B7C: main (test-input.c:69)
==402==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==402==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==402==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==402==    by 0x400C87: read_input (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x401B7C: main (test-input.c:69)
==402== 
==402== Invalid read of size 8
==402==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x401B7C: main (test-input.c:69)
==402==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==402== 
==402== 
==402== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==402==  Access not within mapped region at address 0x8
==402==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==402==    by 0x401B7C: main (test-input.c:69)
==402==  If you believe this happened as a result of a stack
==402==  overflow in your program's main thread (unlikely but
==402==  possible), you can try to increase the size of the
==402==  main thread stack using the --main-stacksize= flag.
==402==  The main thread stack size used in this run was 8388608.
==402== 
==402== HEAP SUMMARY:
==402==     in use at exit: 960 bytes in 12 blocks
==402==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==402== 
==402== LEAK SUMMARY:
==402==    definitely lost: 56 bytes in 1 blocks
==402==    indirectly lost: 56 bytes in 7 blocks
==402==      possibly lost: 168 bytes in 1 blocks
==402==    still reachable: 680 bytes in 3 blocks
==402==         suppressed: 0 bytes in 0 blocks
==402== Rerun with --leak-check=full to see details of leaked memory
==402== 
==402== For counts of detected and suppressed errors, rerun with: -v
==402== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==407== Memcheck, a memory error detector
==407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==407== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==407== Command: ./tester hands.txt draw.txt
==407== Parent PID: 406
==407== 
==407== Invalid read of size 8
==407==    at 0x400CDE: read_input (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x401B7C: main (test-input.c:69)
==407==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==407==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==407==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==407==    by 0x400C87: read_input (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x401B7C: main (test-input.c:69)
==407== 
==407== Invalid read of size 8
==407==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x401B7C: main (test-input.c:69)
==407==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==407== 
==407== 
==407== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==407==  Access not within mapped region at address 0x8
==407==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==407==    by 0x401B7C: main (test-input.c:69)
==407==  If you believe this happened as a result of a stack
==407==  overflow in your program's main thread (unlikely but
==407==  possible), you can try to increase the size of the
==407==  main thread stack using the --main-stacksize= flag.
==407==  The main thread stack size used in this run was 8388608.
==407== 
==407== HEAP SUMMARY:
==407==     in use at exit: 960 bytes in 12 blocks
==407==   total heap usage: 21 allocs, 9 frees, 9,336 bytes allocated
==407== 
==407== LEAK SUMMARY:
==407==    definitely lost: 56 bytes in 1 blocks
==407==    indirectly lost: 56 bytes in 7 blocks
==407==      possibly lost: 168 bytes in 1 blocks
==407==    still reachable: 680 bytes in 3 blocks
==407==         suppressed: 0 bytes in 0 blocks
==407== Rerun with --leak-check=full to see details of leaked memory
==407== 
==407== For counts of detected and suppressed errors, rerun with: -v
==407== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==413== Memcheck, a memory error detector
==413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==413== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==413== Command: ./tester h.txt d.txt
==413== Parent PID: 412
==413== 
==413== Invalid read of size 8
==413==    at 0x400CDE: read_input (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x401B7C: main (test-input.c:69)
==413==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==413==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==413==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==413==    by 0x400C87: read_input (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x401B7C: main (test-input.c:69)
==413== 
==413== Invalid read of size 8
==413==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x401B7C: main (test-input.c:69)
==413==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==413== 
==413== 
==413== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==413==  Access not within mapped region at address 0x8
==413==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==413==    by 0x401B7C: main (test-input.c:69)
==413==  If you believe this happened as a result of a stack
==413==  overflow in your program's main thread (unlikely but
==413==  possible), you can try to increase the size of the
==413==  main thread stack using the --main-stacksize= flag.
==413==  The main thread stack size used in this run was 8388608.
==413== 
==413== HEAP SUMMARY:
==413==     in use at exit: 1,096 bytes in 14 blocks
==413==   total heap usage: 30 allocs, 16 frees, 9,920 bytes allocated
==413== 
==413== LEAK SUMMARY:
==413==    definitely lost: 56 bytes in 1 blocks
==413==    indirectly lost: 48 bytes in 6 blocks
==413==      possibly lost: 168 bytes in 1 blocks
==413==    still reachable: 824 bytes in 6 blocks
==413==         suppressed: 0 bytes in 0 blocks
==413== Rerun with --leak-check=full to see details of leaked memory
==413== 
==413== For counts of detected and suppressed errors, rerun with: -v
==413== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==419== Memcheck, a memory error detector
==419== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==419== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==419== Command: ./tester i1 i2
==419== Parent PID: 418
==419== 
==419== Invalid read of size 8
==419==    at 0x400CDE: read_input (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x401B7C: main (test-input.c:69)
==419==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==419==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==419==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==419==    by 0x400C87: read_input (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x401B7C: main (test-input.c:69)
==419== 
==419== Invalid read of size 8
==419==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x401B7C: main (test-input.c:69)
==419==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==419== 
==419== 
==419== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==419==  Access not within mapped region at address 0x8
==419==    at 0x401397: print_hand (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x400CE8: read_input (in /graderhome/work/c4prj2_input/tester)
==419==    by 0x401B7C: main (test-input.c:69)
==419==  If you believe this happened as a result of a stack
==419==  overflow in your program's main thread (unlikely but
==419==  possible), you can try to increase the size of the
==419==  main thread stack using the --main-stacksize= flag.
==419==  The main thread stack size used in this run was 8388608.
==419== 
==419== HEAP SUMMARY:
==419==     in use at exit: 1,120 bytes in 17 blocks
==419==   total heap usage: 33 allocs, 16 frees, 9,944 bytes allocated
==419== 
==419== LEAK SUMMARY:
==419==    definitely lost: 56 bytes in 1 blocks
==419==    indirectly lost: 24 bytes in 3 blocks
==419==      possibly lost: 168 bytes in 1 blocks
==419==    still reachable: 872 bytes in 12 blocks
==419==         suppressed: 0 bytes in 0 blocks
==419== Rerun with --leak-check=full to see details of leaked memory
==419== 
==419== For counts of detected and suppressed errors, rerun with: -v
==419== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
